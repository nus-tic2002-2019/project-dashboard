[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "group \u0027me.chercherlyn\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "version \u00271.0.0\u0027"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "sourceCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "targetCompatibility \u003d JavaVersion.VERSION_11"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "compileJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "compileTestJava.options.encoding \u003d \"UTF-8\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    jcenter()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    testCompile \u0027org.junit.jupiter:junit-jupiter-engine:5.5.2\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    archiveBaseName \u003d \"Duke\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    archiveClassifier \u003d \"\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 26
    }
  },
  {
    "path": "data/duke_test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "T | 0 | a"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "E | 0 | b | 1420048800000"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 2
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 100
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "rootProject.name \u003d \u0027duke\u0027"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 2
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Launcher"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Duke(String path) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Storage storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        TaskList tasks \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        parser \u003d new Parser(ui, tasks, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        ui.println(logo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        //ui.scenarioStart();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        System.out.println(\"\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        ui.printFancy(\"\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            ui.print(\"\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            parser.processCommand(ui.readLine());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 47
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 7
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/command/Cmd.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Represents a command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public abstract class Cmd {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Creates Cmd instance."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param ui user interface"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param tasks tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Cmd(Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Execute command with given args."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param args user arguments after command name"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public abstract void execute(String[] args);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 35
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/command/commands/CmdBye.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.command.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.command.Cmd;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Command to close the program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class CmdBye extends Cmd {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public CmdBye(Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(ui, tasks, storage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void execute(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        ui.printFancy(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        System.exit(0); // exit the app"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 22
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/command/commands/CmdDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.command.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.command.Cmd;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.tasks.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Command to add \"deadline\" task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class CmdDeadline extends Cmd {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public CmdDeadline(Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(ui, tasks, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void execute(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // get \"/by\" index in args array"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        int timeIndex \u003d -1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        for (int i \u003d 0; i \u003c args.length; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            if (\"/by\".equals(args[i])) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                timeIndex \u003d i;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : no time specified"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (timeIndex \u003d\u003d -1 || args.length - 1 \u003c\u003d timeIndex)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"Correct /by not specified for deadline.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : no description specified"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (timeIndex \u003d\u003d 0)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // for description we join args starting from 0 up to index before \"/by\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // for time we join args starting after \"/by\" up to end of args"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String description \u003d String.join(\" \", Arrays.copyOfRange(args, 0, timeIndex));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String time \u003d String.join(\" \", Arrays.copyOfRange(args, timeIndex + 1, args.length));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Task task \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        ui.printFancy(\"\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \" %s\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \"Now you have %d tasks in the list.\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                task.toString(), tasks.size());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 56
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/command/commands/CmdDelete.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.command.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.command.Cmd;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Command to delete a task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class CmdDelete extends Cmd {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public CmdDelete(Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(ui, tasks, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void execute(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : index"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (args.length \u003c 1 || args[0].isEmpty())"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"The index of a task not specified.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : index not correct"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            index \u003d Integer.parseInt(args[0]) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            if (index \u003c 0 || index \u003e\u003d tasks.size())"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                throw new DukeException(\"The index is out of tasks range!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"The index is not a number!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        ui.printFancy(\"\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \" %s\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \"Now you have %d tasks in the list.\","
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                task.toString(), tasks.size());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 45
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/command/commands/CmdDone.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.command.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.command.Cmd;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Command to mark task as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class CmdDone extends Cmd {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public CmdDone(Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(ui, tasks, storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void execute(String[] args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : index"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (args.length \u003c 1 || args[0].isEmpty())"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"The index of a task not specified.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : index not correct"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            index \u003d Integer.parseInt(args[0]) - 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            if (index \u003c 0 || index \u003e\u003d tasks.size())"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                throw new DukeException(\"The index is out of tasks range!\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"The index is not a number!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        ui.printFancy(\"Nice! I\u0027ve marked this task as done:\\n  %s\", task.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 40
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/command/commands/CmdEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.command.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.command.Cmd;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.tasks.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Command to add \"event\" task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class CmdEvent extends Cmd {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public CmdEvent(Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(ui, tasks, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void execute(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // get \"/at\" index in args array"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        int timeIndex \u003d -1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        for (int i \u003d 0; i \u003c args.length; i++) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            if (\"/at\".equals(args[i])) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                timeIndex \u003d i;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : no time specified"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (timeIndex \u003d\u003d -1 || args.length - 1 \u003c\u003d timeIndex)"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"Correct /at not specified for event.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : no description specified"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (timeIndex \u003d\u003d 0)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // for description we join args starting from 0 up to index before \"/at\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // for time we join args starting after \"/at\" up to end of args"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String description \u003d String.join(\" \", Arrays.copyOfRange(args, 0, timeIndex));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String time \u003d String.join(\" \", Arrays.copyOfRange(args, timeIndex + 1, args.length));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Task task \u003d new Event(description, time);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        ui.printFancy(\"\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \" %s\\n\" +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \"Now you have %d tasks in the list.\","
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                task.toString(), tasks.size());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 56
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/command/commands/CmdFind.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.command.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.command.Cmd;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class CmdFind extends Cmd {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Creates Cmd instance."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param ui      user interface"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param tasks   tasks"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param storage storage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public CmdFind(Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(ui, tasks, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void execute(String[] args) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : keywords for every search"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (args.length \u003c 1 || args[0].isEmpty())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"Keywords not specified!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : keywords for regex search"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        boolean regexSearch \u003d args[0].equals(\"-r\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (regexSearch \u0026\u0026 args.length \u003c 2)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"Keywords not specified for regex!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // process"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        List\u003cString\u003e found \u003d regexSearch"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                ? findRegex(String.join(\" \", Arrays.copyOfRange(args, 1, args.length)))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                : findSimple(String.join(\" \", args));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (found.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            ui.printFancy(\"No tasks matches your query!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            builder.append(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            for (String foundLine : found)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                builder.append(foundLine).append(\"\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            builder.deleteCharAt(builder.length() - 1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            ui.printFancy(builder.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private List\u003cString\u003e findSimple(String input) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        input \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        List\u003cString\u003e found \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // find"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            String description \u003d task.getDescription().toLowerCase();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            if (description.contains(input))"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                found.add((i + 1) + \". \" + task.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private List\u003cString\u003e findRegex(String input) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        List\u003cString\u003e found \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // create pattern"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Pattern pattern;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            pattern \u003d Pattern.compile(input, Pattern.CASE_INSENSITIVE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"Invalid search query. Check regex syntax!\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // find"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            String info \u003d task.toString();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            if (pattern.matcher(info).find())"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                found.add((i + 1) + \". \" + info);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return found;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 91
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/command/commands/CmdList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.command.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.command.Cmd;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Command to view list of tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class CmdList extends Cmd {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public CmdList(Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(ui, tasks, storage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void execute(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // if no tasks in the list, then output specified message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            ui.printFancy(\"There are no tasks in the list! Add something!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // build output list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            int count \u003d i + 1;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            builder"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    .append(count).append(\". \")"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    .append(tasks.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // remove last line break"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        builder.deleteCharAt(builder.length() - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // print it"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String output \u003d builder.toString();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        ui.printFancy(output);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 41
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/command/commands/CmdTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.command.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.command.Cmd;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.tasks.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.util.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Command to add \"todo\" task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class CmdTodo extends Cmd {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public CmdTodo(Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(ui, tasks, storage);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void execute(String[] args) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // check : no description specified"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (args.length \u003c 1 || args[0].isEmpty())"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String description \u003d String.join(\" \", args);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        ui.printFancy(\"\" +"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \" %s\\n\" +"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                        \"Now you have %d tasks in the list.\","
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                task.toString(), tasks.size());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 37
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.tasks.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.tasks.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Represents a task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    protected static final String DATETIME_IN_PATTERN \u003d \"dd.MM.yyyy HHmm\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    protected static final String DATETIME_OUT_PATTERN \u003d \"dd.MM.yyyy HH:mm a\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    protected static final DateTimeFormatter DATETIME_IN_FORMATTER;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    protected static final DateTimeFormatter DATETIME_OUT_FORMATTER;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        DATETIME_IN_FORMATTER \u003d DateTimeFormatter.ofPattern(DATETIME_IN_PATTERN)"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                .withZone(ZoneId.systemDefault());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        DATETIME_OUT_FORMATTER \u003d DateTimeFormatter.ofPattern(DATETIME_OUT_PATTERN)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                .withZone(ZoneId.systemDefault());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private boolean done;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.done \u003d false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    // getters"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Returns task description"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return task description"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Returns whether task marked as done or not"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return true if marked done, false otherwise"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    // getters func"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Returns fancy status icon, depending on done status"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return \"\\u2713\" if done, \"\\u2718\" if not"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return (done ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    // setters"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Sets marked as done status"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param done done status"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.done \u003d done;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    // static"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Deserializes task from string data"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param data data"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public static Task deserialize(String data) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String[] dataArr \u003d data.split(\" \\\\| \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String type \u003d dataArr[0];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        boolean done \u003d Integer.parseInt(dataArr[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String description \u003d dataArr[2];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                task \u003d new Todo(description);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                task.setDone(done);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                long timeMillis \u003d Long.parseLong(dataArr[3]);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                task \u003d new Event(description, timeMillis);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                task.setDone(done);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                timeMillis \u003d Long.parseLong(dataArr[3]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                task \u003d new Deadline(description, timeMillis);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                task.setDone(done);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                return task;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                throw new IllegalStateException(\"Invalid task type!\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Serializes task to string data"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param task task"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return data"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public static String serialize(Task task) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            return String.format(\"T | %s | %s\","
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    task.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    task.getDescription());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            return String.format(\"E | %s | %s | %d\","
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    task.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    task.getDescription(),"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    ((Event) task).getTimeMillis());"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            return String.format(\"D | %s | %s | %d\","
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    task.isDone() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    task.getDescription(),"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    ((Deadline) task).getTimeMillis());"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } else throw new IllegalStateException(\"Uknown task type!\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 138
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/task/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.time.ZonedDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Represents deadline task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private ZonedDateTime time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Deadline(String description, String time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // parse time, using input formatter"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            this.time \u003d ZonedDateTime.parse(time, DATETIME_IN_FORMATTER);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(String.format("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    \"Date format should be in format: \u0027%s\u0027\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    DATETIME_IN_PATTERN));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Deadline(String description, long timeMillis) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.time \u003d ZonedDateTime.ofInstant("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                Instant.ofEpochMilli(timeMillis),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                ZoneId.systemDefault());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Returns a time deadline will end by."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return time"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public long getTimeMillis() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return time.toInstant().toEpochMilli();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                getStatusIcon(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                getDescription(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                DATETIME_OUT_FORMATTER.format(time));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 53
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/task/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.time.Instant;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.time.ZoneId;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.time.ZonedDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Represents event task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private ZonedDateTime time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // parse time, using input formatter"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            this.time \u003d ZonedDateTime.parse(time, DATETIME_IN_FORMATTER);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new DukeException(String.format("
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    \"Date format should be in format: \u0027%s\u0027\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    DATETIME_IN_PATTERN));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Event(String description, long timeMillis) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.time \u003d ZonedDateTime.ofInstant("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                Instant.ofEpochMilli(timeMillis),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                ZoneId.systemDefault());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Returns a time event will pass at."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return time"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public long getTimeMillis() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return time.toInstant().toEpochMilli();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                getStatusIcon(),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                getDescription(),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                DATETIME_OUT_FORMATTER.format(time));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 53
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/task/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Represents todo task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return String.format(\"[T][%s] %s\","
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                getStatusIcon(),"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                getDescription());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 20
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/util/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.command.Cmd;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.command.commands.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Represents a parser to parse and execute commands from given user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private Map\u003cString, Cmd\u003e commandMap;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Parser(Ui ui, TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.commandMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.commandMap.put(\"bye\", new CmdBye(ui, tasks, storage));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.commandMap.put(\"deadline\", new CmdDeadline(ui, tasks, storage));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.commandMap.put(\"delete\", new CmdDelete(ui, tasks, storage));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.commandMap.put(\"done\", new CmdDone(ui, tasks, storage));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.commandMap.put(\"event\", new CmdEvent(ui, tasks, storage));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.commandMap.put(\"list\", new CmdList(ui, tasks, storage));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.commandMap.put(\"todo\", new CmdTodo(ui, tasks, storage));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.commandMap.put(\"find\", new CmdFind(ui, tasks, storage));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Parse and execute command from given user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param input user input line"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void processCommand(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // split input on 2 parts by first space"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // ex.: \"todo something hmm\" -\u003e [\"todo\", \"something hmm\"]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String[] data \u003d input.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // get command \u0026 args"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // if input length \u003e 1, then args \u003d input[1].split(\"\\\\s+\")"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // else args \u003d new String[0]"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String command \u003d data[0].toLowerCase();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        String[] args \u003d data.length \u003e 1"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                ? data[1].split(\"\\\\s+\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                : new String[0];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // get and call command"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            Cmd cmd \u003d commandMap.get(command);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            if (cmd \u003d\u003d null)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            cmd.execute(args);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            ui.printFancy(\"\\u2639 OOPS!!! %s\", ex.getMessage());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 60
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/util/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Represents a file storage manager for tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Can save and load tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private Path file;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Creates Storage instance."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param path path to file with tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            String pathSeparator \u003d File.separator;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            path \u003d path"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    .replace(\"/\", pathSeparator)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                    .replace(\"\\\\\", pathSeparator);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            file \u003d new File(path).toPath();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            // create parent dirs if not exist"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            Path dir \u003d file.getParent();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            if (dir !\u003d null \u0026\u0026 !Files.isDirectory(dir))"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                Files.createDirectories(dir);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            // create file if not exist"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            if (!Files.isRegularFile(file))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                Files.createFile(file);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new IllegalStateException(ex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Load tasks from file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return loaded task list"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public TaskList loadTasks() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            List\u003cString\u003e dataList \u003d Files.readAllLines(file, StandardCharsets.UTF_8);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            for (String data : dataList)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                taskList.add(Task.deserialize(data));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new IllegalStateException(ex);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Save tasks to file."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param taskList task list to save"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void saveTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            // build data string"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            List\u003cTask\u003e tasks \u003d taskList.getTasks();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            List\u003cString\u003e dataList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            for (Task task : tasks)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                dataList.add(Task.serialize(task));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            String dataListStr \u003d String.join(\"\\n\", dataList);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            // save to file"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            Files.write(file, dataListStr.getBytes(StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        } catch (Exception ex) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "            throw new IllegalStateException(ex);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 84
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/util/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.Collection;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Represents a storage for tasks in memory."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Creates TaskList instance with no tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Creates TaskList instance from given collection of tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param tasks collection of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public TaskList(Collection\u003c? extends Task\u003e tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    // getters"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Returns task by index."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param index index"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Returns list size"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return list size"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Returns unmodifiable list of tasks"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return unmodifiable list of tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return Collections.unmodifiableList(tasks);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    // func"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Adds task to list"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param task task to add"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Removes tasks from list by index"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param index index"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return task removed"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Task remove(int index) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 83
    }
  },
  {
    "path": "src/main/java/me/chercherlyn/duke/util/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " * Represents a utility to interact with user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Creates Ui instance."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Calls System.out.printf(text, args)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Method to deal with boilerplate code"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param text text with placeholders"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param args placeholders"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void print(String text, Object ... args) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        System.out.printf(text, args);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Calls System.out.printf(text, args) with linebreak"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Method to deal with boilerplate code"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param text text with placeholders"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param args placeholders"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void println(String text, Object ... args) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        System.out.printf(text + \"\\n\", args);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Prints text to console in fancy format"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param text text with placeholders"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @param args placeholders"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void printFancy(String text, Object ... args) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // indent each line (replace line break with line break + space indent)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // also appent indent to first line"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        text \u003d \"     \" + text;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        text \u003d text.replace(\"\\n\", \"\\n     \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // print"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        System.out.println(\"    ------------------------------------------------------------\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        System.out.printf(text + \"\\n\", args);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        System.out.println(\"    ------------------------------------------------------------\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * Read string line from console"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     * @return text entered from console"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public String readLine() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    /*public void scenarioStart(){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        System.out.println(\"    3 Commands : Todo - todo {query} - Task which you want to do later on and record it down \\n\"+"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"                 Deadline - deadline {query} /by {dd.MM.yyyy} HHmm - Task which is going to be due soon with the date and time recorded down\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"                 Event - event {query} /at {dd.MM.yyyy} HHmm - Task which will be happening and dont want to miss it\\n\\n\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"    Or else : User might enter a wrong input which will prompt them an ERROR MESSAGE \u0026/or can choose to END Chatbot by \u0027Bye\u0027\\n\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"    For a start, there is no data stored into the List, so if the user type \u0027list\u0027 there wont be any result shown just an ERROR MESSAGE to notify user.\\n\" +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"    Once User is ready to add a task, they can key in a todo, deadline or any event task command. \\n\\n\" +"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"    Scenario                  : If User wish to read a book later, they can add it into their Task List as a reminder - \u0027todo read book\u0027.\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"                                When the task is added, it is Mark with a cross [X] as you haven done the task yet.\\n\\n\" +"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"    Successful Syntax         : [T] - Todo , [D] - Deadline  \u0026 [E] - Event\\n\" +"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"                                [✓] - Mark task is done \u0026 [X] - Task is not done\\n\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"    View Task Added           : User can type \u0027list\u0027 to view the task they have added earlier on.\\n\\n\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"    Mark Task Done/Delete     : User can enter \u0027done {number}\u0027 / \u0027delete {number}\\n\\n\" +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"    Find Task                 : With the keyword \u0027find {query}\u0027 \u0026 return you the result - based on description only\\n\\n\" +"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"    Find Task (Better Search) : With the keyword + regex express \u0027-r\u0027 -\u003e Like an arguement flag which says we want to search in regular expressions mode.\\n\" +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                            \"                                User can easily search on tasks based on the whole task - Example : \u0027find -r {date}\u0027. -\u003e This cannot be done in normal find function\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 88
    }
  },
  {
    "path": "src/test/java/me/chercherlyn/duke/task/tasks/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.task.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.tasks.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void constructor_strTimeIn_validOut() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Description\", \"12.01.1987 0230\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void constructor_millisTimeIn_validOut() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // 537417000000 millis \u003d 12.01.1987 02:30 am (GMT+3)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Description\", 537409800000L);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void getTimeMillis_validIn_validOut() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Description\", 537409800000L);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        assertEquals(537409800000L, deadline.getTimeMillis());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void toString_validIn_validOut() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Description\", \"12.01.1987 0230\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        assertEquals("
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                \"[D][\\u2718] Description (by: 12.01.1987 02:30 AM)\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                deadline.toString());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 35
    }
  },
  {
    "path": "src/test/java/me/chercherlyn/duke/util/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "package me.chercherlyn.duke.util;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.tasks.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "import me.chercherlyn.duke.task.tasks.Todo;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    public void generalTest() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // prepare"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        TaskList tasksInit \u003d new TaskList();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        tasksInit.add(new Todo(\"a\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        tasksInit.add(new Event(\"b\", \"01.01.2015 0200\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        Storage storage \u003d new Storage(\"data/duke_test.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        // test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        storage.saveTasks(tasksInit);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        TaskList tasksLoaded \u003d storage.loadTasks();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        List\u003cString\u003e expected \u003d tasksInit.getTasks().stream()"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                .map(Object::toString).collect(Collectors.toList());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        List\u003cString\u003e actual \u003d tasksLoaded.getTasks().stream()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "                .map(Object::toString).collect(Collectors.toList());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        assertEquals(2, actual.size());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "        assertEquals(expected, actual);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cheralynwsw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cheralynwsw": 35
    }
  }
]

[
  {
    "path": "src/main/java/Commands/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Command to exit the program"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the bye command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public ByeCommand(){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Access the UI to show the exit message"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks The task list will store the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui The Ui class which will help to display to the user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage The Storage which will save the list of task to"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Return the boolean true for it to exit the while loop"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return true"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 37
    }
  },
  {
    "path": "src/main/java/Commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * abstract class command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected String taskItem;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public Command(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     *Constructs command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskItem will store the command that the user input"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public Command(String taskItem){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.taskItem \u003d taskItem;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Calling the function will execute the function of the individual command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks The task list will store the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui The Ui class which will help to display to the user"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage The Storage which will save the list of task to"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException Any expected error"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        throw new DukeException(\"Error for command execute!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * This function will be default to false until exit or bye is called."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return false to keep it looping for user input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 49
    }
  },
  {
    "path": "src/main/java/Commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Command to delete a task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the delete command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes will store the command that the user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public DeleteCommand(String taskDes){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(taskDes);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Execute the removal of Task in the task list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks The task list will store the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui The Ui class which will help to display to the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage The Storage which will save the list of task to"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException Any expected error"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            taskItem.substring(7);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Delete command can\u0027t be empty\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskItem.substring(7))-1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            String deletedTask \u003d tasks.getTask(taskIndex).toString();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            ui.deleteMsg(deletedTask, tasks.getSize());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch(NumberFormatException e){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please key in task number\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }catch (IndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please key in task number that is in the list\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 49
    }
  },
  {
    "path": "src/main/java/Commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Command set a specific task as done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the Done command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes the command the user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public DoneCommand(String taskDes){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(taskDes);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Set the Task isDone boolean to True"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            taskItem.substring(5);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Done command can\u0027t be empty\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(taskItem.substring(5)) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            Task doneTask \u003d tasks.getTask(taskIndex);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            if(doneTask.getIsDone()){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                throw new DukeException(\"Tasks.Task is already done\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            doneTask.editDone(true);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            String taskString \u003d doneTask.toString();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            int getTaskIndex \u003d doneTask.getTaskIndex()+1;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            Ui.doneMsg(taskString, getTaskIndex);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch(NumberFormatException e){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please key in task number\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 52
    }
  },
  {
    "path": "src/main/java/Commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Command to show the list of task the user want to find using a keyword"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the Find command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes the command the user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public FindCommand(String taskDes){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(taskDes);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Execute the find command by finding the keyword from the list of task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui the Ui"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage the Storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(tasks.getSize()\u003c\u003d 0){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Sorry. There isn\u0027t a list\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            taskItem.substring(5);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Find command can\u0027t be empty\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ArrayList\u003cTask\u003e tempTasksList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String keyword \u003d taskItem.substring(5);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for(int i \u003d 0; i\u003ctasks.getSize(); i++){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            Task currentTasksClass \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            String theStringTask \u003d currentTasksClass.getTask();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            if(theStringTask.contains(keyword)){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                tempTasksList.add(currentTasksClass);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ui.showAllArrayList(tempTasksList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 53
    }
  },
  {
    "path": "src/main/java/Commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Command to show the list of task the user has"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the list command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public ListCommand(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Execute the list command to show all the task the user has"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui the Ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage the Storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if (tasks.getSize() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"There are no item in the list\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ui.showAllTask(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 34
    }
  },
  {
    "path": "src/main/java/Commands/NewDeadlinesCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Parser.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Command to Create a new Deadlines task"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class NewDeadlinesCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the Deadlines Command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes the Command the User input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public NewDeadlinesCommand(String taskDes){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(taskDes);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Execute the deadline command by creating the Deadlines task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui the Ui"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage the Storage"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            taskItem.substring(9);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Deadline command can\u0027t be empty\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if (!taskItem.contains(\" /by \")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please state /by yyyy-mm-dd\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        int dividerPosition2 \u003d taskItem.indexOf(\" /by \");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String taskDes \u003d taskItem.substring(9, dividerPosition2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String taskDateTime \u003d taskItem.substring(dividerPosition2 + 5);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Deadlines deadline \u003d deadlineTimeSetter(taskDes, taskDateTime);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        //Checking whether the task has been created as a Deadlines before adding and saving"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assert deadline.getTaskType() \u003d\u003d TaskType.DEADLINES;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        tasks.addTask(deadline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Checking if the user has input any time and adding it into the class if he has"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes the task description"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDateTime the task date and time"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the events class"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static Deadlines deadlineTimeSetter(String taskDes, String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            if (!taskDateTime.contains(\" \")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                LocalDate d1 \u003d Parser.convertStringToDate(taskDateTime);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new Deadlines(taskDes, d1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                int dividerPosition3 \u003d taskDateTime.indexOf(\" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                String taskDate \u003d taskDateTime.split(\" \")[0];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                String taskTime \u003d taskDateTime.substring(dividerPosition3 + 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                LocalDate d1 \u003d Parser.convertStringToDate(taskDate);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                LocalTime t1 \u003d Parser.convertStringToTime(taskTime);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new Deadlines(taskDes, d1, t1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please set date as YYYY-MM-DD\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 78
    }
  },
  {
    "path": "src/main/java/Commands/NewEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.Events;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.TaskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Command to Create a new Events task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class NewEventCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the Event Command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes the Command the User input"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public NewEventCommand(String taskDes){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(taskDes);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Execute the event command by creating the Events task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui the Ui"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage the Storage"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            taskItem.substring(6);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Event command can\u0027t be empty\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(!taskItem.contains(\" /at \")){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please state /at yyyy-mm-dd\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        int dividerPosition2 \u003d taskItem.indexOf(\" /at \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String taskDes \u003d taskItem.substring(6, dividerPosition2);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String taskDateTime \u003d taskItem.substring(dividerPosition2+5);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Events event \u003d eventTimeSetter(taskDes, taskDateTime);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        //Checking whether the task has been created as an Events before adding and saving"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assert event.getTaskType() \u003d\u003d TaskType.EVENTS;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Checking if the user has input any time and adding it into the class if he has"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes the task description"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDateTime the task date and time"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the events class"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static Events eventTimeSetter(String taskDes, String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            if (!taskDateTime.contains(\" \")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                LocalDate d1 \u003d Parser.convertStringToDate(taskDateTime);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new Events(taskDes, d1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                int dividerPosition3 \u003d taskDateTime.indexOf(\" \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                String taskDate \u003d taskDateTime.split(\" \")[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                String taskTime \u003d taskDateTime.substring(dividerPosition3 + 1);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                LocalDate d1 \u003d Parser.convertStringToDate(taskDate);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                LocalTime t1 \u003d Parser.convertStringToTime(taskTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new Events(taskDes, d1, t1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please set date as YYYY-MM-DD\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 83
    }
  },
  {
    "path": "src/main/java/Commands/NewTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Command to Create a new ToDos task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class NewTodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the ToDo Command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes the command the user input"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public NewTodoCommand(String taskDes){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(taskDes);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Execute the ToDo command to create the ToDos task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui the Ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage the Storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            taskItem.substring(5);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Todo command can\u0027t be empty\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ToDos todo \u003d new ToDos(taskItem.substring(5));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assert todo.getTaskType() \u003d\u003d TaskType.TODOS; //Checking whether the task has been created as a ToDo before adding and saving"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        tasks.addTask(todo);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 40
    }
  },
  {
    "path": "src/main/java/Commands/OtherCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * list of other etc commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class OtherCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the OtherCommands"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public OtherCommand(String taskDes){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(taskDes);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Execute the other commands: Hi, Help and Clearlist"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks The list of task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui The Ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage The storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        switch(taskItem){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"hi\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                ui.displayMsg(\"Hello to you too! :)\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                ui.displayListOfHelpFunction();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"clearlist\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                tasks.clearAll();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                ui.displayMsg(\"List of Tasks has all been clear, you have an empty list now.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                throw new DukeException(\"Shouldn\u0027t have error here\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 46
    }
  },
  {
    "path": "src/main/java/Commands/ScheduleCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.Deadlines;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.Events;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.TaskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Schedule Command will find all events and deadlines with the dates that the user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class ScheduleCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the schedule command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public ScheduleCommand(String taskDes){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(taskDes);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * The command will extract the events and deadlines that are on the date the user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * It will spilt up into events with time, events without time and deadlines and display them"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks the tasklist that store all the task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param ui the ui that will display messages"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param storage the storage to save or load from the txt file"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error like empty command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            taskItem.substring(9);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch(StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Schedule command can\u0027t be empty\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalDate date \u003d Parser.convertStringToDate(taskItem.substring(9));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ArrayList\u003cEvents\u003e scheduleWithTime \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ArrayList\u003cEvents\u003e scheduleWithoutTime \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ArrayList\u003cDeadlines\u003e deadlines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for(int i \u003d 0; i \u003c tasks.getSize(); i++){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            categoriseTask(tasks, scheduleWithTime, scheduleWithoutTime, deadlines, i, date);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        sort_TaskByTime_deadlines(deadlines);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        sort_TaskByTime_events(scheduleWithTime);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ui.displaySchedule(scheduleWithTime, scheduleWithoutTime, deadlines, date);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Separate function to categorise the task into the different ArrayList"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param scheduleWithTime the list of event with time"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param scheduleWithoutTime the list of event without time"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param deadlines the list of deadline"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param i the task index"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param date the date the user input"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private void categoriseTask(TaskList tasks, ArrayList\u003cEvents\u003e scheduleWithTime, ArrayList\u003cEvents\u003e scheduleWithoutTime,"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                                ArrayList\u003cDeadlines\u003e deadlines, int i, LocalDate date){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(tasks.getTask(i).getTaskType() \u003d\u003d TaskType.TODOS){"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(tasks.getTask(i).getTaskType() \u003d\u003d TaskType.DEADLINES){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            Deadlines deadline \u003d (Deadlines)tasks.getTask(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            if(deadline.getDate().isEqual(date)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                deadlines.add(deadline);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Events event \u003d (Events)tasks.getTask(i);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(!event.getDate().isEqual(date)){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(!event.isHasTime()){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            scheduleWithoutTime.add(event);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        scheduleWithTime.add(event);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Do a sort to arrange the deadline by their timing"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param deadlines list of deadline with the date the user wants"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected errors"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private void sort_TaskByTime_deadlines(ArrayList\u003cDeadlines\u003e deadlines) throws DukeException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        int indexOfDeadlineWithoutTime \u003d deadlines.size()-1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for(int j \u003d 0; j \u003c deadlines.size() - 1; j++) { //bubble sort"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            boolean isSorted \u003d true;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            for (int i \u003d 0; i \u003c deadlines.size() - j - 1; i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                Deadlines deadline1 \u003d deadlines.get(i);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                Deadlines deadline2 \u003d deadlines.get(i+1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                //shift those deadline without time to the back"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                if(!deadline1.isHasTime()){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                    int lastIndex \u003d deadlines.size()-j-1;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                    Collections.swap(deadlines, i, lastIndex);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                    isSorted \u003d false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                    indexOfDeadlineWithoutTime \u003d lastIndex;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                //prevent comparing with deadline without time"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                if(!deadline2.isHasTime()){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                if (deadline1.getTime().isAfter(deadline2.getTime())) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                    Collections.swap(deadlines, i, i+1);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                    isSorted \u003d false;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            if(isSorted){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        //make the order of those without time right again"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for (int k \u003d 0; k \u003c (deadlines.size()-indexOfDeadlineWithoutTime)/2; k++){"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            Collections.swap(deadlines, indexOfDeadlineWithoutTime, deadlines.size()-k-1);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            indexOfDeadlineWithoutTime++;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Sort the event based on their time"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param events list of events with time"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private void sort_TaskByTime_events(ArrayList\u003cEvents\u003e events) throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for(int j \u003d 0; j \u003c events.size() - 1; j++) { //bubble sort"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            boolean isSorted \u003d true;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            for (int i \u003d 0; i \u003c events.size() - j - 1; i++) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                Events event1 \u003d events.get(i);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                Events event2 \u003d events.get(i+1);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                if (event1.getTime().isAfter(event2.getTime())) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                    Collections.swap(events, i, i+1);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                    isSorted \u003d false;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            if(isSorted){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 150
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Create the Duke class to start of the program"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the Duke class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param filePath the filePath of the stored txt file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * this function will run the Duke program"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ui.showDukeWelcome();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Main function to start"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        new Duke(\"tasks.txt\").run();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 65
    }
  },
  {
    "path": "src/main/java/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Any expected error"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public DukeException(String error){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 10
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Parser class to spilt up the text from the command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Read the command and return the individual command based on what the user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param fullCommand what the user has inputted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the individual command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String keyCommand \u003d fullCommand.split(\" \")[0].toLowerCase();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        switch(keyCommand){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"exit\":"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new NewTodoCommand(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new NewEventCommand(fullCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new NewDeadlinesCommand(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"schedule\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new ScheduleCommand(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"hi\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"clearlist\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return new OtherCommand(keyCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                throw new DukeException(\"Unknown command! Please type \u0027help\u0027 for list of command!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Convert the different way the user type the date into the date"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param text what the user has typed for the date portion"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the LocalDate to be stored"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static LocalDate convertStringToDate(String text) throws DukeException {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalDate d1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(!text.contains(\"-\")){"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            return checkForOtherWording(text);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            d1 \u003d LocalDate.parse(text);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please set date as YYYY-MM-DD\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return d1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Checking if the user has type any other words that like mon and return the date based on the current date"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param text the date the user input"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the LocalDate to be stored"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static LocalDate checkForOtherWording(String text) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        text \u003d text.toLowerCase();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalDate today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        DayOfWeek dayOfToday \u003d today.getDayOfWeek();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        DayOfWeek commandDay \u003d getCommandDay(text);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        int dayOfTodayIntValue \u003d dayOfToday.getValue();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        int commandDayIntValue \u003d commandDay.getValue();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        int date_diff \u003d (commandDayIntValue + 7 - dayOfTodayIntValue) % 7;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalDate d1 \u003d today.plus(date_diff, ChronoUnit.DAYS);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return d1;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Checking and returning the day of week based on what the user has type"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param text the text the user inputted"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the DayOfWeek"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException error when user typed something else instead of the day of the week"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static DayOfWeek getCommandDay(String text) throws DukeException {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        switch(text){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"mon\":"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"monday\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return DayOfWeek.MONDAY;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"tue\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"tuesday\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return DayOfWeek.TUESDAY;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"wed\":"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"wednesday\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return DayOfWeek.WEDNESDAY;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"thu\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"thursday\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return DayOfWeek.THURSDAY;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"fri\":"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"friday\":"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return DayOfWeek.FRIDAY;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"sat\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"saturday\":"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return DayOfWeek.SATURDAY;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"sun\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case \"sunday\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                return DayOfWeek.SUNDAY;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                throw new DukeException(\"Please state date\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Convert the time into a string"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param text what the type has input for the time field"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the LocalTime to be store"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException error when user put something other than the correct time format"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static LocalTime convertStringToTime(String text) throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalTime t1;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(!text.contains(\":\")){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            text \u003d convertTimeTextToTimeStyle(text);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            t1 \u003d LocalTime.parse(text);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        catch (DateTimeParseException e){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please set time as hhmm or hh:mm e.g.1301 or 13:01\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return t1;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Convert if the user didnt put : in between the hours and mins in his time"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param text what the user input as time"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the String of what the user input to be used to convert into time"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException error when the user didnt keep to 4 digit"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static String convertTimeTextToTimeStyle(String text) throws DukeException {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if (!text.substring(4).isEmpty()){"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Invalid time! Please keep it to 4 digit\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String hour \u003d text.substring(0,2);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String min \u003d text.substring(2,4);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String newTime \u003d hour + \":\" + min;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return newTime;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 164
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Commands.NewDeadlinesCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Commands.NewEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Storage to read and write file in a txt file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private static String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the storage class to store the file path of the txt file"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param filePath the file path of the txt file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public Storage(String filePath){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Separate out the event and deadline and create the individual class"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskType the type of the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDes the task description stored"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDateTime the date and time of the task"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the task created"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private static Task creatingEventOrDeadline(String taskType, String taskDes, String taskDateTime) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(!(taskType.contains(\"E\") || taskType.contains(\"D\"))){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Unknown task Type\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(taskType.contains(\"E\")){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            return NewEventCommand.eventTimeSetter(taskDes, taskDateTime);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return NewDeadlinesCommand.deadlineTimeSetter(taskDes, taskDateTime);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Convert the text in the file into task class"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param text text from the file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return return the task created"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private static Task convertTaskFromFile(String text) throws DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        int firstDivider \u003d text.indexOf(\"| \");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String taskType \u003d text.substring(firstDivider + 2, firstDivider + 3);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String taskDoneString \u003d text.substring(firstDivider + 6, firstDivider +7);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String taskDetails \u003d text.substring(firstDivider + 10);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        boolean isDone \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(!(taskDoneString.contains(\"0\")||taskDoneString.contains(\"1\"))) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Unknown boolean\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(taskDoneString.contains(\"1\")){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(taskDetails.contains(\" | \")){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            int timeDivider \u003d taskDetails.indexOf(\" | \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            String taskDes \u003d taskDetails.substring(0, timeDivider);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            String taskTime \u003d taskDetails.substring(timeDivider + 3);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            task \u003d creatingEventOrDeadline(taskType, taskDes, taskTime);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            task.editDone(isDone);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(!taskType.contains(\"T\")){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Unknown task type\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        task \u003d new ToDos(taskDetails);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        task.editDone(isDone);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * create the list of task from the file"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the ArrayList of task that is in the file"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws FileNotFoundException file that can\u0027t be found"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any other expected error"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private static ArrayList\u003cTask\u003e getListOfTask() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(f.length() \u003d\u003d 0){"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            return new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            Task task \u003d convertTaskFromFile(s.nextLine());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            task.setTaskIndex(tasks.size() - 1);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Return the ArrayList of Task"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the ArrayList of task"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            ArrayList\u003cTask\u003e tasks \u003d getListOfTask();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Empty list process to create new\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Convert the task into the saving format to save into the file"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param task the task to be converted"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the string format to be save"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException any expected error"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws IllegalStateException any IllegalStateExpection"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private static String convertTaskStoring(Task task) throws DukeException, IllegalStateException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String storingTask;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        switch (task.getTaskType()){"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case EVENTS:"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                Events event \u003d (Events)task;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                storingTask \u003d (event.getTaskIndex()+1) + \" | E\""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + \" | \" + (event.getIsDone() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + \" | \" + event.getTask()"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + \" | \" + event.getDateTimeString()"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case DEADLINES:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                Deadlines deadlines \u003d (Deadlines)task;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                storingTask \u003d (deadlines.getTaskIndex()+1) + \" | D\""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + \" | \" + (deadlines.getIsDone() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + \" | \" + deadlines.getTask()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + \" | \" + deadlines.getDateTimeString()"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            case TODOS:"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                storingTask \u003d (task.getTaskIndex()+1) + \" | T\""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + \" | \" + (task.getIsDone() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + \" | \" + task.getTask()"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                        + System.lineSeparator();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                throw new IllegalStateException(\"Unexpected value: \" + task.getTaskType());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return storingTask;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Write into a txt file"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param lists list of the task to be write into the txt file"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void save(TaskList lists){"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            FileWriter fileWrite \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            for (int i \u003d 0; i \u003c lists.getSize(); i++) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                String storingTask \u003d convertTaskStoring(lists.getTask(i));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                fileWrite.write(storingTask);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            fileWrite.close();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }catch(IOException | DukeException e){"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 177
    }
  },
  {
    "path": "src/main/java/Tasks/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * The Deadline class which the user want to store with date and time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected LocalDate taskDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected LocalTime taskTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected boolean hasTime \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the Deadlines class without a time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param description the description the user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDate the date the user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public Deadlines(String description, LocalDate taskDate) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.taskDate \u003d taskDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        taskType \u003d TaskType.DEADLINES;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the Event class with a time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param description the description the user input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDate the date the user input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskTime the time the user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public Deadlines(String description, LocalDate taskDate, LocalTime taskTime) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this(description, taskDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.taskTime \u003d taskTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.hasTime \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        taskType \u003d TaskType.DEADLINES;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * return the date that was stored"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the date that was stored"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return taskDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * return true or false if the class has time"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return true or false if the class has time"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public boolean isHasTime(){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return hasTime;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public LocalTime getTime() throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(!hasTime){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please indicate time\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return taskTime;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * return the date and time that was stored in string"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the date and time that was stored in string"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public String getDateTimeString(){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return hasTime"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                ? taskDate + \" \" + taskTime"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                : taskDate.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * return the date and time formatted that was stored in string"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the date and time formatted that was stored in string"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public String getDateTimeStringFormat(){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return hasTime"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                ? taskDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + taskTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"))"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                : taskDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Return the task type with the task that the user input and whether it is done or not"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the task in String"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + getDateTimeStringFormat() + \")\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 97
    }
  },
  {
    "path": "src/main/java/Tasks/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * The event class which the user want to store with date and time"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected LocalDate taskDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected LocalTime taskTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected boolean hasTime \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the Event class without a time"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param description the description the user input"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDate the date that the user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public Events(String description, LocalDate taskDate) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.taskDate \u003d taskDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        taskType \u003d TaskType.EVENTS;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the Event with a time"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param description the description the user input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskDate the date the user input"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskTime the time the user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public Events(String description, LocalDate taskDate, LocalTime taskTime) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this(description, taskDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.taskTime \u003d taskTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.hasTime \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        taskType \u003d TaskType.EVENTS;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * return the date that was stored"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the date that was stored"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return taskDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * return if the class has a time or not"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return hasTime"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public boolean isHasTime(){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return hasTime;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * return the time of the event"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the task time"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @throws DukeException the expected error"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public LocalTime getTime() throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(!hasTime){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            throw new DukeException(\"Please indicate time\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return taskTime;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * return the date and time of the task in String"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the date and time in String"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public String getDateTimeString(){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return hasTime"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                ? taskDate + \" \" + taskTime"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                : taskDate.toString();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * return the date and time formatted in String"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the formatted date and time in String"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public String getDateTimeStringFormat(){"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return hasTime"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                ? taskDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \" \" + taskTime.format(DateTimeFormatter.ofPattern(\"hh:mm a\"))"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                : taskDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Return the task type with the task that the user input and whether it is done or not"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the task in String"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + getDateTimeStringFormat() + \")\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 97
    }
  },
  {
    "path": "src/main/java/Tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * The task class to store all the class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected String storeWords;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    protected int taskIndex;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the task class to store the task the user requested"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param thingsToDo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public Task(String thingsToDo){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.storeWords \u003d thingsToDo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Set the task Index"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param i The task index of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void setTaskIndex(int i){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        taskIndex \u003d i;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Return the task index of the task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the task index"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public int getTaskIndex(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return taskIndex;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Return the task that the user set"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the task that was store"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public String getTask(){"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return storeWords;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Return the task done status"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the task done status"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public boolean getIsDone(){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Edit the status of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param isItDone the new status of the task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void editDone(boolean isItDone){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        isDone \u003d isItDone;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Edit the task the user store"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param thingsToDo the new task that replaces the current task"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void editTask(String thingsToDo){"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        storeWords \u003d thingsToDo;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Return a Tick or X symbols"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return a Tick or X symbols"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Convert the task description to the string"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the task descruption to string"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return \" [\" + this.getStatusIcon() + \"] \" + this.getTask();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * return the task type"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the task type"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public TaskType getTaskType(){"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 96
    }
  },
  {
    "path": "src/main/java/Tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import UI.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Store the list of task for the program to call and use"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the task list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs the task list with a available list of task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Adding of task into the task list and set the task index as well as display the action after it has been added"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param s the task that the user requested to be added"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void addTask(Task s){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        tasks.add(s);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        s.setTaskIndex(tasks.size() - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Ui.displayAfterAction(s.toString(), tasks.size());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Getting the number of task in the list"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the number of task in the list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static int getSize(){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Get the specific task from list of task"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param i the task index for the task that the user wants"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the task that the user requested"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static Task getTask(int i){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Remove the task from the list that the user requested"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskIndex the task index that the user requested"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void remove(int taskIndex) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for(int i \u003d taskIndex; i \u003c tasks.size(); i++){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            tasks.get(i).setTaskIndex(i);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Remove everything from the task list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void clearAll(){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        tasks.clear();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 75
    }
  },
  {
    "path": "src/main/java/Tasks/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Helps to set the TaskType and store all the task type available"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    TODOS, EVENTS, DEADLINES"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 8
    }
  },
  {
    "path": "src/main/java/Tasks/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * The ToDo class for user to store their To Do task"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Constructs and store the task that the user input"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param thingsToDo The task that the user input to do"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public ToDos(String thingsToDo) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        super(thingsToDo);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        taskType \u003d TaskType.TODOS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * When this function is called, it will return the task type with the task that the user input and whether it is done or not"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "   "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 27
    }
  },
  {
    "path": "src/main/java/UI/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package UI;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.Deadlines;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.Events;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " * Represent the Ui which will take in Input from user and display Message for user to see"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Welcome message to show to the user when starting up Duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void showDukeWelcome(){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                + \"Type \\\"Help\\\" for list of helpful commands!\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Line separator to spilt between user input and system output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void showLine(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"_______________________\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Display Message after an adding of Tasks and display the number of total Tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param thatTask the task that has been added"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param numberOfTask the total number of task in the list"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void displayAfterAction(String thatTask, int numberOfTask){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"Added: \"+ thatTask + \"\\n\" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Now you have \"+ numberOfTask +\" tasks in the list.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Display the exit message to let user know that the program will end."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void showExit(){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Show the user when they need to input a command and read the user input"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @return the command to the other class which will execute the command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static String readCommand(){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.print(\"Type something: \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        line \u003d in.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Display the error message to user"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param errorMessage Error message from expected DukeException"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void showError(String errorMessage){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"WE GOT AN ERROR: \" + errorMessage);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Show the error to the user when there is a problem with starting up the program"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void showLoadingError(){"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"There are currently problem with loading the task, proceeding to create a new empty list\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Display the any edited task list to the User (Mainly use at Find command)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskList the task list"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void showAllArrayList(ArrayList\u003cTask\u003e taskList){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        int i\u003d1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for(Task task: taskList){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            System.out.println(i + \". Task number \" + (task.getTaskIndex()+1) +\": \" + task.toString());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Display the whole list of task to the user"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param tasks the task list"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void showAllTask(TaskList tasks){"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for(int i \u003d 0; i\u003c tasks.getSize(); i++){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            System.out.println(\"Task Number \" + (tasks.getTask(i).getTaskIndex() +1) + \": \" + tasks.getTask(i).toString());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Display to the user that the task he requested has been deleted"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param deletedTask The task that the user request to be deleted"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param numberOfTask The total number of task remaining in the list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void deleteMsg(String deletedTask, int numberOfTask){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"I have deleted the following: \\n\" +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                deletedTask + \"\\n\" +"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Now you have \"+ numberOfTask +\" tasks in the list.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Display to the user that task has been marked done"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param doneTask The task that the user request to be marked done"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param taskIndex The index/id of the task"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void doneMsg(String doneTask, int taskIndex){"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Task Number \"+ taskIndex + \": \" + doneTask);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Display any message to he user"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param msg the message to be display to the user"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void displayMsg(String msg){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Display to the user the schedule for the day that the user requested"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param scheduleWithTime the list of all events with Time on the day the user requested"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param scheduleWithoutTime the list of all events without Time on the day the user requested"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param deadlines the list of all deadlines for the day that was requested by the user"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * @param date the date that the user requested"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void displaySchedule(ArrayList\u003cEvents\u003e scheduleWithTime, ArrayList\u003cEvents\u003escheduleWithoutTime, ArrayList\u003cDeadlines\u003e deadlines, LocalDate date){"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"The Deadline for \" + date +\" are as following: \");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for(Deadlines deadline: deadlines){"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            System.out.println(i + \". \"+ deadline.toString());"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(deadlines.size()\u003d\u003d0){"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            System.out.println(\"   There are no Deadline\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"The Event Schedule for \" + date +\" are as following: \");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        i \u003d 1;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for(Events event: scheduleWithTime){"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            System.out.println(i + \". \"+ event.toString());"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(scheduleWithTime.size()\u003d\u003d0){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            System.out.println(\"   There are no Event with time\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"The Event for \" + date + \" without a time are as following: \");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        i \u003d 1;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        for(Events event: scheduleWithoutTime){"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            System.out.println(i + \". \"+ event.toString());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        if(scheduleWithoutTime.size()\u003d\u003d0){"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "            System.out.println(\"   There are no Event without time\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    };"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     * Display all the command available and how to use them"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public static void displayListOfHelpFunction(){"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"List of command that DUKE have: \\n\" +"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"(*Commands.Command are not case sensitive)\\n\" +"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"(**Words with double * are case sensitive)\\n\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Hi\\\": Say hello to the bot\\n\" +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type Hi\\n\" +"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: Hi\\n\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Bye\\\" OR \\\"Exit\\\": Say goodbye to the bot and close the program\\n\" +"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type Bye\\n\" +"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: Bye\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Todo\\\": Set a task that you want to do\\n\" +"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type Todo (Your To Do Task)\\n\" +"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: Todo Get a pet\\n\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Event\\\": Set a event task\\n\" +"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type Event (Your event Task) /at (YYYY-MM-DD OR Monday-Sunday(Full spelling or First 3 letter)) (Optional: hh:mm OR hhmm \u003c24 Hours format\u003e) \\n\" +"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: Event Countdown party /at 2019/12/31\\n\" +"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type something: Event Basketball /at Wed 18:00 \\n\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Deadline\\\": Set a deadline task\\n\" +"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type Deadline (Your event Task) /by (YYYY-MM-DD OR Monday-Sunday(Full spelling or First 3 letter)) (Optional: hh:mm OR hhmm \u003c24 Hours format\u003e)\\n\" +"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: Deadline Duke project /by 2019/11/17 2359 \\n\" +"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type something: Deadline Pay phone bills /by Sat\\n\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"List\\\": Bring out the list of task\\n\" +"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type List\\n\" +"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: list\\n\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Find\\\": Find a task with the word you want to find\\n\" +"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type Find (The word**)\\n\" +"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: Find bill\\n\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Schedule\\\": Find the Schedule for the day\\n\" +"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type Schedule (YYYY-MM-DD OR Monday-Sunday(Full spelling or First 3 letter))\\n\" +"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: Schedule Sunday\\n\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Done\\\": Set a task to Done\\n\" +"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type Done (Task Number)\\n\" +"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: Done 5\\n\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Delete\\\": Delete a task(Be careful: Once you delete a task, it is gone forever. And all other task number changes) \\n\" +"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type Delete (Task Number)\\n\" +"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: Delete 5\\n\");"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Clearlist\\\": Clear and remove all the task in the task list\\n\" +"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"*Note: Clearlist will not save until you add another task, so if you want to undo your clear, restart the program\\n\" +"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"How to use: \\n\" +"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"Type Clearlist\\n\" +"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "                \"E.g. Type something: Clearlist\\n\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        System.out.println(\"\\\"Help\\\": Since you just used this, I\u0027m sure I don\u0027t have to explain this...\\n\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 230
    }
  },
  {
    "path": "src/test/java/Duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void dummyTest2(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 19
    }
  },
  {
    "path": "src/test/java/Exception/DukeExceptionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class DukeExceptionTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 4
    }
  },
  {
    "path": "src/test/java/Parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void ParserDateTest1() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalDate d1 \u003d Parser.convertStringToDate(\"2020-12-12\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalDate d2 \u003d Parser.convertStringToDate(\"2019-12-12\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"2020-12-12\", d1.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"2019-12-12\", d2.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void ParserTimeTest1() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalTime t1 \u003d Parser.convertStringToTime(\"1000\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalTime t2 \u003d Parser.convertStringToTime(\"10:00\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"10:00\", t1.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"10:00\", t2.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"10:00 AM\", t2.format(DateTimeFormatter.ofPattern(\"hh:mm a\")));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 32
    }
  },
  {
    "path": "src/test/java/Tasks/DeadlinesTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class DeadlinesTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void DeadlinesTest1() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalDate d1 \u003d LocalDate.parse(\"2019-12-12\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalTime t1 \u003d LocalTime.parse(\"10:00\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Deadlines dead1 \u003d new Deadlines(\"Phone bills\", d1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Deadlines dead2 \u003d new Deadlines(\"Duke\", d1, t1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"[D] [✘] Phone bills (at: Dec 12 2019)\", dead1.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"[D] [✘] Duke (at: Dec 12 2019 10:00 AM)\", dead2.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"Dec 12 2019\", dead1.getDateTimeStringFormat());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"Dec 12 2019 10:00 AM\", dead2.getDateTimeStringFormat());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"2019-12-12\", dead1.getDateTimeString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"2019-12-12 10:00\", dead2.getDateTimeString());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 28
    }
  },
  {
    "path": "src/test/java/Tasks/EventsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class EventsTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void EventTest1() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalDate d1 \u003d LocalDate.parse(\"2019-12-12\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalTime t1 \u003d LocalTime.parse(\"10:00\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Events e1 \u003d new Events(\"Learn Java\", d1);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Events e2 \u003d new Events(\"Finals\", d1, t1);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"[E] [✘] Learn Java (at: Dec 12 2019)\", e1.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"[E] [✘] Finals (at: Dec 12 2019 10:00 AM)\", e2.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"Dec 12 2019\",e1.getDateTimeStringFormat());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"Dec 12 2019 10:00 AM\",e2.getDateTimeStringFormat());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"2019-12-12\",e1.getDateTimeString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"2019-12-12 10:00\",e2.getDateTimeString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 27
    }
  },
  {
    "path": "src/test/java/Tasks/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void TaskListTest1() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ToDos t \u003d new ToDos(\"Learn Java\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        tasks.addTask(t);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(1, tasks.getSize());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(t, tasks.getTask(0));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void TaskListTest2() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        LocalDate d1 \u003d LocalDate.parse(\"2019-12-12\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        Events e \u003d new Events(\"Learn Java\", d1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        tasks.addTask(e);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(1, tasks.getSize());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(e, tasks.getTask(0));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(1,tasks.getTask(0).getTaskIndex());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 34
    }
  },
  {
    "path": "src/test/java/Tasks/ToDosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "package Tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "public class ToDosTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    public void toDoTest1(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ToDos todo1 \u003d new ToDos(\"Duke project\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ToDos todo2 \u003d new ToDos(\"Learn how to drive\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        ToDos todo3 \u003d new ToDos(\"Learn Tennis\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"[T] [✘] Duke project\",todo1.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"[T] [✘] Learn how to drive\",todo2.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"[T] [✘] Learn Tennis\",todo3.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        todo2.editDone(true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "        assertEquals(\"[T] [✓] Learn how to drive\",todo2.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 25
    }
  },
  {
    "path": "tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "1 | T | 1 | sleep"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "2 | E | 0 | lunch with friends | 2019-11-18"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "3 | E | 0 | Dinner with Family | 2019-11-18"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "4 | E | 0 | Work | 2019-11-18"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "5 | E | 0 | Seminar | 2019-11-18 23:12"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "6 | D | 1 | Duke | 2019-11-18"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "7 | D | 0 | LMS | 2019-11-18 00:00"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "8 | D | 0 | Video for Duke | 2019-11-18 23:59"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "9 | E | 0 | Friendly talk | 2019-11-18 11:11"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "10 | T | 0 | sleep early"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "11 | T | 1 | shop for a new fan"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "12 | E | 0 | Go online shopping with 12/12 sales | 2019-12-12 00:00"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "13 | D | 0 | online sales ending | 2019-12-12 23:59"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "14 | T | 1 | play games"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "15 | E | 0 | monday sales | 2019-11-18 12:00"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "16 | T | 0 | go outside and exercise"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "17 | E | 0 | running club | 2019-11-18"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "18 | E | 0 | swimming club | 2019-12-01 13:00"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "19 | D | 0 | duke | 2019-11-17"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "20 | E | 0 | go out | 2019-12-12"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "21 | E | 0 | Reservist | 2019-11-19 09:00"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "22 | D | 1 | Module 123 report | 2019-11-30 23:59"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "23 | T | 0 | run"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "24 | T | 0 | do a eat"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "25 | T | 0 | do a catch up with james"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "26 | E | 0 | go school | 2019-12-12 09:00"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "27 | D | 0 | Phone bills | 2019-12-12 13:00"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Icynopeople"
        },
        "content": "28 | E | 0 | running by MBS | 2019-12-12 18:00"
      }
    ],
    "authorContributionMap": {
      "Icynopeople": 28
    }
  }
]

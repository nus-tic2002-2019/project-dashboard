[
  {
    "path": "GUIcodes.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.control.Label; "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Iteration 1:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creates a label with the specified text and adds it to the dialog container."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * @param text String containing text to add"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * @return a label with the specified text that has word wrap enabled."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                new DialogBox(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                new DialogBox(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        );"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return \"Gudetama: \" + input;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        //Step 1. Formatting the window to look as expected."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        //..."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        });"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        });"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        //Part 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        });"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        });"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      }
    ],
    "authorContributionMap": {
      "e0260237": 134
    }
  },
  {
    "path": "sample.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "1.[T][✓] Java Assignment"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "2.[E][✓] Tak Systems  (at:  7 Oct 2019)"
      }
    ],
    "authorContributionMap": {
      "e0260237": 2
    }
  },
  {
    "path": "src/main/java/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the bye command that will exit the user after updating the status."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to return new status of exit."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        isExit \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 24
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the parent command that will is utilized by the respective commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creation of checker variable on exit"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * and string for command line input from user."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    protected String fullCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        public Command(String fullCommand){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            this.fullCommand \u003d fullCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Parent function that will be utilized by child classes."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    };"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0260237": 35
    }
  },
  {
    "path": "src/main/java/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the deadline command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Return deadline input description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public DeadlineCommand(String fullCommand){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Format deadline date to dd-mm-yyyy hh:mm:ss."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static Date convertDeadline(String deadline){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat (\"dd-MM-yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                date \u003d format.parse(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            } catch (ParseException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                System.out.println(\"Unable to parse using \" + format);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                System.out.println(\"Please use format \\\"dd-MM-yyyy HH:mm:ss\\\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                System.out.println(\"Default date will be inserted instead.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return new Date();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to return new deadline."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if (fullCommand.isEmpty()){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Empty description for DEADLINE\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }else if(!fullCommand.contains(\" / \")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Missing keyword / for DEADLINE\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        int dividerPosition \u003d fullCommand.indexOf(\"/\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String itemName \u003d fullCommand.substring(9, dividerPosition);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String itemName1 \u003d fullCommand.substring(dividerPosition,fullCommand.length());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String itemName2 \u003d itemName1.replace(\"/\", \"\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks.addTask(new Deadline(itemName,convertDeadline(itemName2)));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.changed();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 62
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the delete command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Return deadline input description."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public DeleteCommand(String fullCommand) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to delete task requested by user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks.removeTask(Integer.parseInt(fullCommand.split(\" \")[1]));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.changed();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 29
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the done/completed command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public DoneCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to mark completed task requested by user."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks.markAsDone(Integer.parseInt(fullCommand.split(\" \")[1]));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.changed();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 27
    }
  },
  {
    "path": "src/main/java/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the event command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public EventCommand(String fullCommand){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Format deadline date to dd-mm-yyyy hh:mm:ss."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static Date convertEvent(String deadline){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        SimpleDateFormat format \u003d new SimpleDateFormat (\"dd-MM-yyyy HH:mm:ss\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Date date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            date \u003d format.parse(deadline);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            return date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            System.out.println(\"Unable to parse using \" + format);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            System.out.println(\"Please use format \\\"dd-MM-yyyy HH:mm:ss\\\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            System.out.println(\"Default date will be inserted instead.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return new Date();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to return new event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if (fullCommand.isEmpty()){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Empty description for EVENT\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }else if(!fullCommand.contains(\" / \")){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Missing keyword / for EVENT\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        int dividerPosition \u003d fullCommand.indexOf(\"/\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String itemName \u003d fullCommand.substring(6, dividerPosition);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String itemName1 \u003d fullCommand.substring(dividerPosition,fullCommand.length());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String itemName2 \u003d itemName1.replace(\"/\", \"\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks.addTask(new Event(itemName,convertEvent(itemName2)));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.changed();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 60
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the find command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public FindCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to search for matching word requested by user against the task list and returning them."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(fullCommand.substring(5).isEmpty()){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Empty description for Find\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks.findTask(fullCommand.substring(5));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 30
    }
  },
  {
    "path": "src/main/java/command/GetPathCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the return path command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class GetPathCommand {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Returns file directory path set by user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static String getPath(String fullCommand){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"New file path has been set into: \"+fullCommand.split(\"\\\"\")[1]);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return fullCommand.split(\"\\\"\")[1];"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 17
    }
  },
  {
    "path": "src/main/java/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the help command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class HelpCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public HelpCommand(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Listing all the commands for user to input"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"This is the list of commands:\\n\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"1)bye - To exit program \\n\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"2)todo - Input todo task by typing todo \u003ctask name\u003e\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"3)deadline - Input deadline task by typing deadline \u003ctask name\u003e / \u003cdd-MM-yyyy HH:mm:ss\u003e\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"4)event - Input event task by typing event \u003ctask name\u003e / \u003cdd-MM-yyyy HH:mm:ss\u003e\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"5)delete - Delete task by typing delete + number of the task listed\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"6)list - To list out all the existing tasks\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"7)done - To add a tick to a completed task\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"8)save - To save existing task list\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"9)saveTo - To save existing task list to a specific pathing\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"10)loadFrom - To load the task list from a file\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"11)undo - To undo the previous task\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 37
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the list command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to return descriptive list of tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks.getDescription();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 26
    }
  },
  {
    "path": "src/main/java/command/LoadFromCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the load command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class LoadFromCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public LoadFromCommand(String fullCommand) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to loaded file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.setPath(storage, GetPathCommand.getPath(fullCommand));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            new TaskList(storage.load());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            ui.showToUser(\"Problem reading file. Starting with an empty task list\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 30
    }
  },
  {
    "path": "src/main/java/command/SaveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the save command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class SaveCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public SaveCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to save task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.saveNow(storage, tasks.getTaskList());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 26
    }
  },
  {
    "path": "src/main/java/command/SaveToCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the save-to command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class SaveToCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public SaveToCommand(String fullCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to save task list to respective path directory."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.setPath(storage, GetPathCommand.getPath(fullCommand));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.saveCopy(storage, tasks.getTaskList());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 27
    }
  },
  {
    "path": "src/main/java/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the todo command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public TodoCommand(String fullCommand){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(fullCommand);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to return new todo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(fullCommand.substring(5).isEmpty()){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Empty description for TODO\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks.addTask(new ToDo(fullCommand.substring(5)));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.changed();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 32
    }
  },
  {
    "path": "src/main/java/command/UndoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Originator;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class UndoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public UndoCommand(String fullCommand, List\u003cOriginator.Memento\u003e savedStates, Originator originator, TaskList taskList, int state) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        originator.restoreFromMemento(savedStates.get(state-2),taskList);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Utilizing parent class function to search for matching word requested by user against the task list and returning them."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 24
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Originator;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": " *Represents the creation of the chat-bot."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class Duke{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creation of variables such as storage,"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * task-list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * and ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * which are necessary to a task manager."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "   * Pre-loading of any existing saving,"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "   * otherwise start new file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "   * */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public Duke() throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        storage \u003d new Storage(\"C:\\\\NUS\\\\test.txt\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        } catch (DukeException e){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            ui.showToUser(\"☹ OOPS!!! Problem reading file. Starting with an empty task list\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Collects the input of the user to parse to respective command list,"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * to perform the respective tasks."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void run() throws IOException{"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        List\u003cOriginator.Memento\u003e savedStates \u003d new ArrayList\u003cOriginator.Memento\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Originator originator \u003d new Originator();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        int state\u003d0;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                Parser.parse(fullCommand,savedStates, originator, tasks,state);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand,savedStates, originator,tasks,state);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                originator.set(state);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                state+\u003d1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                savedStates.add(originator.saveToMemento(tasks.getTaskList()));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.saveNow(storage,tasks.getTaskList());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ui.printBye();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    * Runs the text according to the directory stated."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    *  */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static void main(String[] args) throws IOException, DukeException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 78,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public Main() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "*/"
      }
    ],
    "authorContributionMap": {
      "e0260237": 38
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/*package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import duke.DialogBox;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/*"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/*"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}*/"
      }
    ],
    "authorContributionMap": {
      "e0260237": 54
    }
  },
  {
    "path": "src/main/java/duke/launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/*package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/*"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class launcher{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}*/"
      }
    ],
    "authorContributionMap": {
      "e0260237": 13
    }
  },
  {
    "path": "src/main/java/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": " *Represents the Duke Exception whenever there is an exception handling."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 9
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import command.*;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Originator;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " *Represents the parser class to parse correct information from users to respective commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class Parser{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     *Takes input from user and splits out the important keywords to return to the correct command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static Command parse(String fullCommand, List\u003cOriginator.Memento\u003e savedStates, Originator originator, TaskList taskList, int state) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String command \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"\": // exit if user input is empty"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new TodoCommand(fullCommand);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new DeadlineCommand(fullCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new EventCommand(fullCommand);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new DeleteCommand(fullCommand);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new DoneCommand(fullCommand);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"save\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new SaveCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"saveTo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new SaveToCommand(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"loadFrom\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new LoadFromCommand(fullCommand);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new FindCommand(fullCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"help\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new HelpCommand(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            case \"undo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new UndoCommand(fullCommand,savedStates, originator,taskList, state);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                throw new DukeException(\"☹ OOPS!!! Unknown command! please try again or you may try typing \u0027help\u0027 to see list of commands.\" + System.lineSeparator());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 50
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": " *Represents the storage for list of task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     *Creation of variable path."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     *return path according to input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public  Storage(String s){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        this.path\u003ds;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     *Retrieval of line for loading up saved files."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private List\u003cString\u003e getLine() throws FileNotFoundException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        List\u003cString\u003e lines \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        File f \u003d new File(path);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        while(s.hasNext()){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            lines.add(s.nextLine());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return lines;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     *Loading up task according to the saved files."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private static Task createTask(String line) throws DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String type\u003dline.split(\"]\")[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String isDone\u003dline.split(\"]\")[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String detail\u003dline.split(\"]\")[2];"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(type.contains(\"T\")){"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            if(isDone.contains(\"✘\")){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new ToDo(detail.substring(1),false);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }else if(isDone.contains(\"✓\")){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new ToDo(detail.substring(1),true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(type.contains(\"D\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            if (isDone.contains(\"✘\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                int dividerPosition \u003d detail.indexOf(\"do by:\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName \u003d detail.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName1 \u003d detail.substring(dividerPosition,detail.length());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName2 \u003d itemName1.replace(\"do by:\", \"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new Deadline(itemName, DeadlineCommand.convertDeadline(itemName2));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            } else if (isDone.contains(\"✓\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                int dividerPosition \u003d detail.indexOf(\"do by:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName \u003d detail.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName1 \u003d detail.substring(dividerPosition,detail.length());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName2 \u003d itemName1.replace(\"do by:\", \"\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new Deadline(itemName, DeadlineCommand.convertDeadline(itemName2));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(type.contains(\"E\")){"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            if (isDone.contains(\"✘\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                int dividerPosition \u003d detail.indexOf(\"at:\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName \u003d detail.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName1 \u003d detail.substring(dividerPosition,detail.length());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName2 \u003d itemName1.replace(\"at:\", \"\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new Event(itemName, EventCommand.convertEvent(itemName2));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            } else if (isDone.contains(\"✓\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                int dividerPosition \u003d detail.indexOf(\"at:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName \u003d detail.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName1 \u003d detail.substring(dividerPosition,detail.length());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName2 \u003d itemName1.replace(\"at:\", \"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new Event(itemName, EventCommand.convertEvent(itemName2));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Missing type element for CREATE TASK\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return new ToDo();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     *Reading and loading up file stated in Duke."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private List\u003cTask\u003e getTasksFromFile() throws FileNotFoundException{"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        List\u003cTask\u003e loadedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui a\u003dnew Ui();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            List\u003cString\u003e lines \u003d getLine() ;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            for (String line : lines) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                if (line.trim().isEmpty()) { //ignore empty lines"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                loadedTasks.add(createTask(line)); //convert the line to a task and add to the list"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            System.out.println(\"File successfully loaded\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        } catch (DukeException e1) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            System.out.println(\"☹ OOPS!!! Problem encountered while loading data: \" +e1.getMessage());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return loadedTasks;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     *Checking if there is any file in the stated path."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public List\u003cTask\u003e load(){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            List\u003cTask\u003e tasks \u003d getTasksFromFile();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            System.out.println(\"☹ OOPS!!! There is no file in the path: \"+e.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     *Saving any changes to task list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void save(List\u003cTask\u003e changed){"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            FileWriter fw \u003d new FileWriter(path);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            for (int i \u003d 0; i \u003c changed.size(); i++) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String temp \u003d (i+1) + \".\" + changed.get(i).list() + System.lineSeparator();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                fw.write(temp);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }catch(IOException e){"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     *Returns new path indicated."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void changePath(String newPath){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        this.path\u003dnewPath;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 150
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the deadline class that initiated by task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class Deadline extends ToDo {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creation of date variable"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    protected Date by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Checks description input and see if date provided is not earlier than current date,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * then returns the respective description and date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public Deadline(String s, Date by){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Date now\u003dnew Date();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assert by.after(now):\"task.Deadline cannot be earlier than now!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Prints icon according to respective action."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String list(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return \"[D]\"+super.print()+\"do by: \"+by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Changes activity icon from cross to tick."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void setDone(boolean isDone){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super.setDone(isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Retrieves boolean from parent class task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public boolean getDone(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return super.getDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Retrieves string of text from parent class task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String getText(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return super.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 46
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the event class that initiated by task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class Event extends ToDo {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creation of date variable"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    protected Date at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Checks description input and see if date provided is not earlier than current date,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * then returns the respective description and date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public Event(String description, Date at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Date now\u003dnew Date();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assert at.after(now):\"task.Deadline cannot be earlier than now!\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Prints icon according to respective action."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String list(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return \"[E]\" +super.print()+ \"at: \"+at;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Changes activity icon from cross to tick."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void setDone(boolean isDone){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super.setDone(isDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Retrieves boolean from parent class task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public boolean getDone(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return super.getDone();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Retrieves string of text from parent class task."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String getText(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return super.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 46
    }
  },
  {
    "path": "src/main/java/task/Originator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import command.DeadlineCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import command.EventCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class Originator{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private static Task createTask(String line) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String type\u003dline.split(\"]\")[0];"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String isDone\u003dline.split(\"]\")[1];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String detail\u003dline.split(\"]\")[2];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(type.contains(\"T\")){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            if(isDone.contains(\"✘\")){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new ToDo(detail.substring(1),false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }else if(isDone.contains(\"✓\")){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new ToDo(detail.substring(1),true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(type.contains(\"D\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            if (isDone.contains(\"✘\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                int dividerPosition \u003d detail.indexOf(\"do by:\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName \u003d detail.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName1 \u003d detail.substring(dividerPosition,detail.length());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName2 \u003d itemName1.replace(\"do by:\", \"\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new Deadline(itemName, DeadlineCommand.convertDeadline(itemName2));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            } else if (isDone.contains(\"✓\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                int dividerPosition \u003d detail.indexOf(\"do by:\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName \u003d detail.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName1 \u003d detail.substring(dividerPosition,detail.length());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName2 \u003d itemName1.replace(\"do by:\", \"\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new Deadline(itemName, DeadlineCommand.convertDeadline(itemName2));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(type.contains(\"E\")){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            if (isDone.contains(\"✘\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                int dividerPosition \u003d detail.indexOf(\"at:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName \u003d detail.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName1 \u003d detail.substring(dividerPosition,detail.length());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName2 \u003d itemName1.replace(\"at:\", \"\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new Event(itemName, EventCommand.convertEvent(itemName2));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            } else if (isDone.contains(\"✓\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                int dividerPosition \u003d detail.indexOf(\"at:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName \u003d detail.substring(0, dividerPosition);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName1 \u003d detail.substring(dividerPosition,detail.length());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                String itemName2 \u003d itemName1.replace(\"at:\", \"\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                return new Event(itemName, EventCommand.convertEvent(itemName2));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        else{"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Missing type element for CREATE TASK\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return new ToDo();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private int state;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    // The class could also contain additional data that is not part of the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    // state saved in the memento.."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void set(int state) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        this.state \u003d state;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Originator: Setting state to \" + state);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public Memento saveToMemento(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Memento mem\u003dnew Memento(this.state);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        for(int i\u003d0;i\u003ctaskList.size();i++){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            mem.addString(taskList.get(i).list()+\"\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Originator: Saving to Memento.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return mem;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void restoreFromMemento(Memento memento, TaskList taskList) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        this.state \u003d memento.getSavedState();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        int size\u003dtaskList.getTaskList().size();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        for(int i\u003d0;i\u003csize;i++){"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            taskList.removeTask(1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            List\u003cString\u003e lines \u003d Arrays.asList(memento.tasks.split(\"\\\\r?\\\\n\"));;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            for (String line : lines) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                if (line.trim().isEmpty()) { //ignore empty lines"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                taskList.addTask(createTask(line)); //convert the line to a task and add to the list"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            System.out.println(\"Undo successfully\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        } catch (DukeException e1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            System.out.println(\"☹ OOPS!!! Problem encountered while undo: \" +e1.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Originator: State after restoring from Memento: \" + state);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static class Memento {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        private String tasks\u003dnew String();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        private final int state;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        public Memento(int stateToSave) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            state \u003d stateToSave;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        public String getString(){"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        public void addString(String add){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            tasks+\u003dadd;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        // accessible by outer class only"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        private int getSavedState() {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            return state;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 115
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the parent class that used by deadline, event and todo."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "abstract public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creation of text variable."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    protected String text;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public Task() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creation of text variable."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public Task(String s){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        text\u003ds;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Return user input of text."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String list(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Return user input of text."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String print(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * utilized by child classes."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    abstract public void setDone(boolean isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * utilized by child classes."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    abstract public boolean getDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Returns user input of text."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String getText(){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return text;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 47
    }
  },
  {
    "path": "src/main/java/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the list of task created by the user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creation of list for tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private static List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * It takes in any existing list from user,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * if none it will start a new list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public TaskList(List\u003cTask\u003e input) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(input.isEmpty()){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            tasks\u003dnew ArrayList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            throw new DukeException(\"☹ OOPS!!! Empty String\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks\u003dinput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * It takes in a word and tries to match it in the list,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * then prints out the list of matched words."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static void findTask(String word){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui.showUserLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\"+ System.lineSeparator());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        for(int i\u003d0; i\u003ctasks.size();i++)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            if (tasks.get(i).list().contains(word)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                System.out.println(\"[\" + (i + 1) + \"] \" + tasks.get(i).list());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui.showUserLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * It takes in a new task and adds it to the list,"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * then prints out the respective message after adding."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static void addTask(Task t) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui.showUserLine();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Got it. I\u0027ve added this task: \\n\" + t.list() + \"\\nNow you have tasks in the list: \"+tasks.size());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui.showUserLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Searches for respective index in the list,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * deletes the entry according the index."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static void removeTask(int i){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Task T \u003d tasks.get(i-1);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks.remove(i-1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui.showUserLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \\n\" + T.list());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"\\nTasks in the list: \" + tasks.size());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui.showUserLine();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * It starts printing out the list of task"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static void getDescription(){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui.showUserLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\"+ System.lineSeparator());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assert (tasks!\u003dnull) \u0026\u0026 (tasks.size()\u003e0): \"No Tasks!\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        for(int i\u003d0;i\u003ctasks.size();i++) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                System.out.println(\"[\" + (i + 1) + \"] \" + tasks.get(i).list());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui.showUserLine();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * It searches for the index indicated by user"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * and marks against the list as done."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static void markAsDone(int index) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        tasks.get(index - 1).setDone(true);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Task T \u003d tasks.get(index-1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui.showUserLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \\n\" + T.list());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Ui.showUserLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Return the task in the task-list."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static List\u003cTask\u003e getTaskList(){"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 96
    }
  },
  {
    "path": "src/main/java/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the todo class that initiated by task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creation of checker variable."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public ToDo(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public ToDo(String s){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Checks description input and boolean status,"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * then returns the respective description and boolean status."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public ToDo(String s, boolean isDone){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        this.isDone\u003disDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * calls the function print to print the icon."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String list(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return \"[T]\" + print();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Prints icon according to respective action."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String print(){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(isDone) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            return \"[\\u2713] \"+super.print();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            return \"[\\u2718] \"+super.print();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void setDone(boolean isDone){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        this.isDone\u003disDone;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Retrieves boolean from parent class task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public boolean getDone(){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Retrieves string of text from parent class task."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String getText(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return super.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 58
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * Represents the user interaction class where"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * it will parse the respective output to the users."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": " * */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Creation of checker variable for status."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    private boolean isChanged\u003dfalse;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Prints welcome message of duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        showUserLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        showUserLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Before you begin, you may type \u0027help\u0027 to find the list of commands.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        showUserLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Prints bye message of duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void printBye(){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        showUserLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        showUserLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Scan and reads the input of user."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Prints out the text for user to see."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static void showToUser(String s){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(s);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Prints out borderline."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public static void showUserLine(){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        showToUser(\"____________________________________________________________\"+System.lineSeparator());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Prints out error message for user to see."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void showError(String s){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        System.out.println(\"Error: \"+s);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Status checker."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void changed(){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        isChanged\u003dtrue;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Saving a new copy of the list of task."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void saveCopy(Storage store, List\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        store.save(tasks);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        showUserLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        showToUser(\"Changes are saved.\"+System.lineSeparator());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        showUserLine();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Saving on existing copy of save."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void saveNow(Storage store, List\u003cTask\u003e changed) throws IOException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        if(isChanged){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            saveCopy(store,changed);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }else{"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            showUserLine();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            showToUser(\"No change made.\"+System.lineSeparator());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            showUserLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * Setting directory path for saved file."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "e0260237"
        },
        "content": "     * */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void setPath(Storage store, String newPath){"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        store.changePath(newPath);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "e0260237": 100
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "      \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "      \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "   \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "      \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "   \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "e0260237": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "   \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": "      \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "      \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": "      \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "         \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "            \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "         \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": "      \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "   \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "e0260237": 19
    }
  },
  {
    "path": "src/test/java/TestJunit/TestJunit.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "package TestJunit;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import org.junit.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import task.ToDo;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "e0260237"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "e0260237"
        },
        "content": "public class TestJunit {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void ToDo() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ToDo todo1 \u003d new ToDo(\"homework\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ToDo todo2 \u003d new ToDo(\"assignment\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        ToDo todo3 \u003d new ToDo(\"exam\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assertEquals(\"[T][✘] homework\", todo1.list());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assertEquals(\"[T][✘] assignment\", todo2.list());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assertEquals(\"[T][✘] exam\", todo3.list());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void Deadline() throws DukeException, ParseException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String sDate1 \u003d \"19-10-2019 14:30:00\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String sDate2 \u003d \"19-11-2019 15:30:00\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String sDate3 \u003d \"19-12-2019 16:30:00\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Date date1 \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\").parse(sDate1);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Date date2 \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\").parse(sDate2);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Date date3 \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\").parse(sDate3);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Deadline deadline1 \u003d new Deadline(\"homework \", date1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Deadline deadline2 \u003d new Deadline(\"assignment \", date2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Deadline deadline3 \u003d new Deadline(\"exam \", date3);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assertEquals(\"[D][✘] homework do by: Sat Oct 19 14:30:00 SGT 2019\", deadline1.list());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assertEquals(\"[D][✘] assignment do by: Tue Nov 19 15:30:00 SGT 2019\", deadline2.list());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assertEquals(\"[D][✘] exam do by: Thu Dec 19 16:30:00 SGT 2019\", deadline3.list());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    public void Event() throws DukeException, ParseException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String sDate1 \u003d \"19-10-2019 14:30:00\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String sDate2 \u003d \"19-11-2019 15:30:00\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        String sDate3 \u003d \"19-12-2019 16:30:00\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Date date1 \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\").parse(sDate1);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Date date2 \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\").parse(sDate2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Date date3 \u003d new SimpleDateFormat(\"dd-MM-yyyy HH:mm:ss\").parse(sDate3);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Event event1 \u003d new Event(\"concert \", date1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Event event2 \u003d new Event(\"meeting \", date2);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        Event event3 \u003d new Event(\"movie \", date3);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assertEquals(\"[E][✘] concert at: Sat Oct 19 14:30:00 SGT 2019\", event1.list());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assertEquals(\"[E][✘] meeting at: Tue Nov 19 15:30:00 SGT 2019\", event2.list());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "e0260237"
        },
        "content": "        assertEquals(\"[E][✘] movie at: Thu Dec 19 16:30:00 SGT 2019\", event3.list());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "e0260237"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "e0260237"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "e0260237"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "e0260237": 61
    }
  },
  {
    "path": "test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "e0260237"
        },
        "content": "1.[T][✓] homework"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "e0260237"
        },
        "content": "2.[T][✓] homework"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "e0260237"
        },
        "content": "3.[T][✘] homework"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "e0260237"
        },
        "content": "4.[T][✘] homework"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "e0260237"
        },
        "content": "5.[T][✘] juniper"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "e0260237"
        },
        "content": "6.[T][✘] homework"
      }
    ],
    "authorContributionMap": {
      "e0260237": 6
    }
  }
]

[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    archiveVersion \u003d \"1.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "group \u0027duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 21,
      "-": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.IllegalStringException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.MissingDateException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.InvalidPriorityException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.MissingIndexException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": " * Entry point of Duke To-do application"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": " * Initializes the application and starts the interaction with the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Duke(String filename){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.storage \u003d new Storage(filename);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            ui.showToUser(tasks.getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /** Runs the program until termination */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                storage.save(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            } catch (IllegalStringException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            } catch (InvalidPriorityException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            } catch (MissingIndexException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            } catch (MissingDateException e){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        new Duke(\"/Users/tankaiwei/Desktop/duke/src/main/java/data/duke.txt\").run();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 61,
      "-": 4
    }
  },
  {
    "path": "src/main/java/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "//break this from AddCommand so as to increase coupling"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class AddDeadlineCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor for description, date and priority"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description, date and priority"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public AddDeadlineCommand(String description, LocalDate date, int priority){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description, priority);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.date \u003d  date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    // do you really need to throw errors? or just inherit directly from the abstract class"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * To add Event Task to the TaskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        Task insert \u003d new Deadline(description, date, priority);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        task.addTask(insert);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        ui.showAdd(insert, task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Get date"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return LocalDate"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 50
    }
  },
  {
    "path": "src/main/java/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "//break this from AddCommand so as to increase coupling"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class AddEventCommand extends Command{"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor for description, date and priority"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description, date and priority"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public AddEventCommand(String description, LocalDate date, int priority){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description, priority);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.date \u003d  date;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    // do you really need to throw errors? or just inherit directly from the abstract class"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * To add Event Task to the TaskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        Task insert \u003d new Event(description, date, priority);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        task.addTask(insert);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        ui.showAdd(insert, task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Get date"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return LocalDate"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public LocalDate getDate(){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 50
    }
  },
  {
    "path": "src/main/java/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "//break this from AddCommand so as to increase coupling"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class AddToDoCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor for description and priority"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description and priority"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public AddToDoCommand(String description, int priority) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description, priority);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    // do you really need to throw errors? or just inherit directly from the abstract class"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * To add todo Task to the TaskList"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                Task insert \u003d new Todo(description, priority);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                task.addTask(insert);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                ui.showAdd(insert, task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 37
    }
  },
  {
    "path": "src/main/java/command/ChangeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.IllegalStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class ChangeCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"change\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    //do you recommend abstract constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor for delete"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public ChangeCommand(int index, int priorityValue){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d priorityValue;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Delete user-assigned Task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws StringIndexOutOfBoundsException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws IllegalStringException"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws StringIndexOutOfBoundsException, IllegalStringException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        task.getTask(index).setPriority(priority);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        ui.showChange(task.getTask(index));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 35
    }
  },
  {
    "path": "src/main/java/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.IllegalStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    protected int priority;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor for command and description"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Command(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor for command value and description"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Command(String description, int value) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d value;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor for command and index"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Command(int index){"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor for just boolean value"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param value"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Command(boolean value){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.isExit \u003d value;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Empty constructor"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Command(){};"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Execute the appropriate commands"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws StringIndexOutOfBoundsException"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws IllegalStringException"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public abstract void execute(TaskList task, Ui ui, Storage storage) throws StringIndexOutOfBoundsException, IllegalStringException;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Getter for the isExit parameter"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return boolean"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Get description of the task"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    };"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 80
    }
  },
  {
    "path": "src/main/java/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.IllegalStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    //do you recommend abstract constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor for delete"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public DeleteCommand(int index){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Delete user-assigned Task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws StringIndexOutOfBoundsException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws IllegalStringException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws StringIndexOutOfBoundsException, IllegalStringException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        ui.showDelete(task.deleteTask(index), task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 34
    }
  },
  {
    "path": "src/main/java/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.IllegalStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor for Done Command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public DoneCommand(int index){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(index);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Setting task to be done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws StringIndexOutOfBoundsException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws IllegalStringException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws StringIndexOutOfBoundsException, IllegalStringException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        task.doneTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 34
    }
  },
  {
    "path": "src/main/java/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.IllegalStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor to exit the program"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public ExitCommand(){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Exit the program"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws StringIndexOutOfBoundsException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws IllegalStringException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws StringIndexOutOfBoundsException, IllegalStringException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        ui.showExit();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 30
    }
  },
  {
    "path": "src/main/java/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.IllegalStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of List Command"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public FindCommand(String description){"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * To list all the Tasks that has the user-assigned keyword"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws StringIndexOutOfBoundsException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws IllegalStringException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws StringIndexOutOfBoundsException, IllegalStringException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        String content \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        for(int i \u003d 0; i \u003c task.getSize(); i++){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            content \u003d task.getTask(i).toString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            if (content.indexOf(description)\u003e\u003d 0){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                ui.showToUser(Integer.toString(i) + \": \" + content);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 35
    }
  },
  {
    "path": "src/main/java/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.IllegalStringException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of List Command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public ListCommand(){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * To list all the Tasks in the TaskList"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param ui"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws StringIndexOutOfBoundsException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws IllegalStringException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void execute(TaskList task, Ui ui, Storage storage) throws StringIndexOutOfBoundsException, IllegalStringException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        ui.showToUser(task.getDescription());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 30
    }
  },
  {
    "path": "src/main/java/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "T | 1 | read book | 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "D | 0 | return book | 2019-12-01 | 3"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "E | 0 | project meeting | 2019-12-01 | 4"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "T | 1 | join sports club | 5"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 4
    }
  },
  {
    "path": "src/main/java/data/test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "[T][✓] read book(Priority: 1)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "[D][✘] return book (by: Dec 1 2019 Priority: 3)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "[E][✘] project meeting (at: Dec 1 2019 Priority: 4)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "[T][✓] join sports club(Priority: 5)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "[T][✘] homework(Priority: 2)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "[T][✘] homework(Priority: 2)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "[T][✘] finish(Priority: 2)"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 7
    }
  },
  {
    "path": "src/main/java/error/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 4
    }
  },
  {
    "path": "src/main/java/error/IllegalStringException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class IllegalStringException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public IllegalStringException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 7
    }
  },
  {
    "path": "src/main/java/error/InvalidPriorityException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class InvalidPriorityException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public InvalidPriorityException(String message){"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 8
    }
  },
  {
    "path": "src/main/java/error/MissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class MissingDateException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public MissingDateException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 7
    }
  },
  {
    "path": "src/main/java/error/MissingIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package error;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class MissingIndexException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public MissingIndexException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 7
    }
  },
  {
    "path": "src/main/java/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.ExitCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.FindCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.ChangeCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.IllegalStringException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.InvalidPriorityException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.MissingIndexException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.MissingDateException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parses user input into command for execution"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the command based on the user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws IllegalStringException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws ArrayIndexOutOfBoundsException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws InvalidPriorityException"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws MissingIndexException"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws MissingDateException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    //runtime error such as ArrayIndexOutOfBounds should not be shown on method signature"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static Command parse(String args) throws IllegalStringException,"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            ArrayIndexOutOfBoundsException,"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            InvalidPriorityException,"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            MissingIndexException,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            MissingDateException{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        String[] inputs \u003d args.split(\" \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        switch(inputs[0]){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case AddToDoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return prepareTodo(inputs);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return prepareEvent(args, inputs);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return prepareDeadline(args, inputs);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            // try if delete never include the number"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return prepareDel(inputs);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return prepareExit();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return prepareDone(inputs);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return prepareList();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return prepareFind(inputs);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case ChangeCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return prepareChange(inputs);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new IllegalStringException(\"Invalid Command: Please refer to the API to find the list of legal commands.\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    //for high cohesion creating new instance should be a new method by itself"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parses arguments in the context of todo command"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param inputs"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private static Command prepareTodo(String[] inputs) throws InvalidPriorityException{"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            String description \u003d inputs[1];"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            for(int i \u003d 2; i \u003c inputs.length - 1; i++){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                System.out.println(inputs[i]);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                description +\u003d \" \" + inputs[i];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final int priorityValue \u003d Integer.parseInt(inputs[inputs.length - 1]);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return new AddToDoCommand(description, priorityValue);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (NumberFormatException e){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new InvalidPriorityException(\"Please remember to key in your priority value for this todo task\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new InvalidPriorityException(\"Please remember to key in your priority value for this todo task\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parses arguments in the context of event command"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param inputs"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private static Command prepareEvent(String args, String[] inputs) throws MissingDateException{"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final LocalDate date \u003d LocalDate.parse(args.substring(args.lastIndexOf(\"/by \") + 4, args.length()-2));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final String description \u003d inputs[1];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final int priorityValue \u003d Integer.parseInt(inputs[inputs.length - 1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return new AddEventCommand(description, date, priorityValue);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new MissingDateException(\"Invalid Input: Please follow the deadline syntax [DESCRIPTION] /by [DATE(YYYY-MM-DD)] [PRIORITY VALUE]\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new MissingDateException(\"Invalid Input: Please follow the deadline syntax [DESCRIPTION] /by [DATE(YYYY-MM-DD)] [PRIORITY VALUE]\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parses arguments in the context of deadline command"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param inputs"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private static Command prepareDeadline(String args, String[] inputs) throws MissingDateException{"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final LocalDate date \u003d LocalDate.parse(args.substring(args.lastIndexOf(\"/by \") + 4, args.length()-2));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final String description \u003d inputs[1];"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final int priorityValue \u003d Integer.parseInt(inputs[inputs.length - 1]);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return new AddDeadlineCommand(description, date, priorityValue);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new MissingDateException(\"Invalid Input: Please follow the deadline syntax [DESCRIPTION] /by [DATE(YYYY-MM-DD)] [PRIORITY VALUE]\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new MissingDateException(\"Invalid Input: Please follow the deadline syntax [DESCRIPTION] /by [DATE(YYYY-MM-DD)] [PRIORITY VALUE]\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parses arguments in the context of delete command"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param inputs"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private static Command prepareDel(String[] inputs) throws MissingIndexException{"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final int index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return new DeleteCommand(index);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new MissingIndexException(\"Invalid Index: Please remember to key in the index you want to mark as done\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parses arguments in the context of delete command"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param inputs"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private static Command prepareChange(String[] inputs) throws MissingIndexException{"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final int index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final int priorityValue \u003d Integer.parseInt(inputs[2]);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return new ChangeCommand(index, priorityValue);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new MissingIndexException(\"Invalid Index: Please remember to key in the index you want to mark as done\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parses arguments in the context of exit command"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private static Command prepareExit(){"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return new ExitCommand();"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parses arguments in the context of done command"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param inputs"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private static Command prepareDone(String[] inputs) throws MissingIndexException {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            final int index \u003d Integer.parseInt(inputs[1]) - 1;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return new DoneCommand(index);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e){"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new MissingIndexException(\"Invalid Index: Please remember to key in the index you want to mark as done\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parses arguments in the context of list command"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the prepared command"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private static Command prepareList(){"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return new ListCommand();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parses arguments in the context of find command"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param inputs"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private static Command prepareFind(String[] inputs) throws MissingIndexException{"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            return new FindCommand(inputs[1]);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            throw new MissingIndexException(\"Invalid Input: Please remember to key in the search keyword\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Parsing text file into Task"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param command stored individual command from the text file"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public static Task createTodo(String command){"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        String[] components \u003d command.split(\" \\\\| \");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        Task result \u003d null;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        switch(components[0]){"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case \"T\" :"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            result \u003d new Todo(components[2], Integer.parseInt(components[1]) ,Integer.parseInt(components[3]));"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case \"D\" :"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            result \u003d new Deadline(components[2], Integer.parseInt(components[1]), LocalDate.parse(components[3]), Integer.parseInt(components[4]));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        case \"E\" :"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            result \u003d  new Event(components[2], Integer.parseInt(components[1]), LocalDate.parse(components[3]), Integer.parseInt(components[4]));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 232
    }
  },
  {
    "path": "src/main/java/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private String filename;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Storage"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param name"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Storage(String name){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.filename \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Static function to write string to files"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param filePath"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param textToAdd"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        assert !filePath.isEmpty();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return ArrayList of the commands found in the text file"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return ArrayList\u003cString\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws FileNotFoundException"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public ArrayList\u003cString\u003e load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        assert !filename.isEmpty();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        ArrayList\u003cString\u003e output \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        File f \u003d new File(filename);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        while (s.hasNextLine()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            output.add(s.nextLine());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        s.close();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Save the ArrayList\u003cString\u003e into a text file"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void save(TaskList task) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        String file \u003d \"/Users/tankaiwei/Desktop/duke/src/main/java/data/test.txt\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            for(int i \u003d 0; i \u003c task.getSize(); i++){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                output \u003d output + task.getTask(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            writeToFile(file, output);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 70
    }
  },
  {
    "path": "src/main/java/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param Description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param value"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Deadline(String Description, int value, LocalDate date){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(Description, value);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param Description"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Deadline(String Description, LocalDate date, int priority){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(Description, 0);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Event for all attributes"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param priority"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Deadline(String description, int done ,LocalDate date, int priority){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Setter of priority value"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param value"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void setPriority(int value){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        String date \u003d this.date.format(formatter);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return \"[D][\" + getStatusIcon() + \"] \" + this.description + \" (by: \" + date + \" Priority: \" + this.priority + \")\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 58
    }
  },
  {
    "path": "src/main/java/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param value"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Event(String description, int value, LocalDate date){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description, value);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Event(String description, LocalDate date, int priority){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description, 0);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Event for all attributes"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param date"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param priority"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Event(String description, int done ,LocalDate date, int priority){"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d priority;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Setter of priority value"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param value"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void setPriority(int value){"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d value;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        String date \u003d this.date.format(formatter);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return \"[E][\" + getStatusIcon() + \"] \" + this.description + \" (at: \" + date  + \" Priority: \" + this.priority + \")\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 59
    }
  },
  {
    "path": "src/main/java/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    protected boolean isDone \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    protected int priority \u003d 0;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param value"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Task(String description, int value) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.isDone \u003d (value \u003d\u003d 1 ? true : false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return the status of the Task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Getter of the Task\u0027s description"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Setter of the Task\u0027s status"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void setIsDone(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        System.out.println(\"Nice!! I\u0027ve marked this task as done: \\n\" + \"[\" + this.getStatusIcon() + \"] \" + this.description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        System.out.printf(\"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Setter of priority value"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param value"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void setPriority(int value){"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d value;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 52
    }
  },
  {
    "path": "src/main/java/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Todo"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param value"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Todo(String description, int value) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description, 0);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d value;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Todo with all attributes"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param value"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param done"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Todo(String description, int done, int value) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description, done);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d value;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor of Todo"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        super(description, 0);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Setter of priority value"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param value"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void setPriority(int value){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.priority \u003d value;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return \"[T][\" + getStatusIcon() + \"] \" + this.description + \"(Priority: \" + priority + \")\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 50
    }
  },
  {
    "path": "src/main/java/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    private ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Constructor that will take in a list of user inputs and store the command into an ArrayList"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param commands"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public TaskList(ArrayList\u003cString\u003e commands){"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        for(String each : commands){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            Task t \u003d Parser.createTodo(each);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            store.add(t);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Empty constructor"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public TaskList(){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Adding new task to the TaskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param item"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void addTask(Task item){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        this.store.add(item);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Set the task to be done"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void doneTask(int index) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        store.get(index).setIsDone();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Delete existing task in the ArrayList"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return deleted task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @throws IndexOutOfBoundsException"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Task deleteTask(int index) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        //what is a good habit return straight ? or not return straight?"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        Task removed_item \u003d store.remove(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return removed_item;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Getter for the size of the TaskList"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the size of the TaskList"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public int getSize(){"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return store.size();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Getter of the task in the ArrayList"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Task getTask(int index){"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return store.get(index);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return the description of the Tasks in the ArrayList"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return String description"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public String getDescription(){"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        String output \u003d \"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                       \"     Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        for(int i \u003d 0;i \u003c store.size(); i++){"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            output \u003d output + \"    \" + Integer.toString(i + 1) + \".\" + store.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        output \u003d output + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 87
    }
  },
  {
    "path": "src/main/java/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "package ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public final static String logo \u003d \"`;-.          ___,\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"  `.`\\\\_...._/`.-\\\"`\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"    \\\\        /      ,\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"    /()   () \\\\    .\u0027 `-._\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"   |)  .    ()\\\\  /   _.\u0027\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"   \\\\  -\u0027-     ,; \u0027. \u003c\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"    ;.__     ,;|   \u003e \\\\\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"   / ,    / ,  |.-\u0027.-\u0027\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"  (_/    (_/ ,;|.\u003c`\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"    \\\\    ,     ;-`\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"     \u003e   \\\\    /\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"    (_,-\u0027`\u003e .\u0027\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            \"pika      (_,\u0027\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return error message"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void showLoadingError(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        System.out.println(\"Loading Error!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return the appropriate error message"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param msg"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void showError(String msg){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return the add UI whenever AddCommand is invoked"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param insert"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param store"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void showAdd(Task insert, TaskList store){"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"     Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"     \" + insert.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"     Now you have \" +  Integer.toString(store.getSize()) +  \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return the delete UI whenever DeleteCommand is invoked"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param insert"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param store"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void showDelete(Task insert, TaskList store){"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"     Noted. I\u0027ve removed this task: \\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"          \" + insert.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"     Now you have \" + store.getSize()  + \" tasks in the list.\\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void showChange(Task insert){"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"     Noted. I\u0027ve changed the priority for this task: \\n\" +"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"          \" + insert.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "                \"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return message UI to user"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @param msg"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void showToUser(String msg){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        System.out.println(msg);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return the welcome msg to user"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        System.out.println(\"Hello I\u0027m from\\n\" + logo);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return the exit UI to user"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void showExit() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * Return dividing line to user"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void showLine(){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "       System.out.println(\"_______\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * UI will take in user input command"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     * @return the user input"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        input \u003d in.nextLine();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 113
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import command.Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.IllegalStringException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.InvalidPriorityException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.MissingDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import error.MissingIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void parserDescriptionTest(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            TaskList store \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            Storage storage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            Command command \u003d Parser.parse(\"todo homework 1\" );"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            command.execute(store, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            assertEquals(\"homework\", command.getDescription());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (IllegalStringException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            //this should not happen"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"there is error\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"there is error\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (InvalidPriorityException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"there is error\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }catch (MissingIndexException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"there is error\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }catch (MissingDateException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"there is error\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void prepareExitTest(){"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            TaskList store \u003d new TaskList();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            Storage storage \u003d new Storage(\"\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            Command command \u003d Parser.parse(\"bye\" );"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            command.execute(store, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            assertEquals(true, command.isExit());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (IllegalStringException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            //this should not happen"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"there is error\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"there is error\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        } catch (InvalidPriorityException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"there is error\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }catch (MissingIndexException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"there is error\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }catch (MissingDateException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "            System.out.println(\"there is error\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        assertEquals(2,2);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 66
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import task.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import tasklist.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    public void TaskListGetSizeTest(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        TaskList task \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        assertEquals(0, task.getSize());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        Todo todo \u003d new Todo(\"hello\", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        task.addTask(todo);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "        assertEquals(1, task.getSize());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 19
    }
  },
  {
    "path": "text-ui-test/EXPECTED.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "Hello I\u0027m from"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": " ____        _        "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "|  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "| | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "| |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "|____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "What can I do for you?"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "Invalid command, Please Try Again!"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "       [T][?] homework"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "Did you forget \u0027/by\u0027? Please try again!"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "       [D][?] homework (by: tomorrow)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "Nice!! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "[?] homework"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "     Here are the tasks in your list:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    1.[T][?] homework"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    2.[D][?] homework (by: tomorrow)"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    ____________________________________________________________"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "Bye. Hope to see you again soon!"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 32
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "invalid command"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "todo homework"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "deadline homework by tomorrow"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "deadline homework /by tomorrow"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kitcatkai"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kitcatkai": 34
    }
  }
]

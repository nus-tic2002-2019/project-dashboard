[
  {
    "path": "Data/Task.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "T | 0 | task 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "D | 0 | task 2  | 11 Nov 2019 12:34 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "E | 0 | task 3  | 12 Dec 2019 11:59 PM"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "D | 0 | submit Duke  | 17 Nov 2019 11:59 PM"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "E | 0 | Working OT on sunday  | 17 Nov 2019 02:00 PM"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 5
    }
  },
  {
    "path": "Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        GetInPut();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void GetInPut() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] data \u003d new String[100];"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        Scanner input \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        line \u003d input.toString();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        while (!line.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            line \u003d input.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (line.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (line.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                GetList(data, count);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                StoreList(data, line, count);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] StoreList(String[] data, String sentence, int pos) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        data[pos] \u003d sentence;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"added:\" + sentence);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void GetList(String[] data, int pos) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        for (int i\u003d0; i\u003cpos; i++) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(i + 1 + \".\" + data[i]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 53
    }
  },
  {
    "path": "src/Command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ByeCommand(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isExit\u003dtrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 18
    }
  },
  {
    "path": "src/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected static String commandline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Command(String commandline){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.commandline \u003d commandline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Command(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        throw new UnsupportedOperationException(\"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void readfileformat(TaskList tasks) throws DukeException, IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        throw new UnsupportedOperationException(\"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 32
    }
  },
  {
    "path": "src/Command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class DeadlineCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public DeadlineCommand(String commandline){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Deadlines(Parser.parseDeadline(commandline)[0], Parser.parseDeadline(commandline)[1]), true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void readfileformat(TaskList tasks) throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Deadlines(Parser.parseDeadlineFile(commandline)[2], Parser.parseDeadlineFile(commandline)[3]), false);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if(Parser.parseDeadlineFile(commandline)[1].equals(\"1\")){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                tasks.markDone(tasks.size(),false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 35
    }
  },
  {
    "path": "src/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public DeleteCommand(String commandline){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.removeItem(Parser.parseIntegerParameter(commandline));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 25
    }
  },
  {
    "path": "src/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public DoneCommand(String commandline){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.markDone(Parser.parseIntegerParameter(commandline),true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 25
    }
  },
  {
    "path": "src/Command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public EventCommand(String commandline){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Events(Parser.parseEvent(commandline)[0], Parser.parseEvent(commandline)[1]), true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void readfileformat(TaskList tasks) throws DukeException, IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Events(Parser.parseEventFile(commandline)[2], Parser.parseEventFile(commandline)[3]), false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if(Parser.parseEventFile(commandline)[1].equals(\"1\")){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                tasks.markDone(tasks.size(),false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 37
    }
  },
  {
    "path": "src/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public FindCommand(String commandline){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.searchTask(commandline);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 22
    }
  },
  {
    "path": "src/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ListCommand(String commandline){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        tasks.displayTasks();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 18
    }
  },
  {
    "path": "src/Command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class TodoCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public TodoCommand(String commandline){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Todo(Parser.parseTodo(commandline)),true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void readfileformat(TaskList tasks) throws DukeException, IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Todo(Parser.parseTodoFile(commandline)[2]),false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if(Parser.parseTodoFile(commandline)[1].equals(\"1\")){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                tasks.markDone(tasks.size(),false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 38
    }
  },
  {
    "path": "src/Command/ViewCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ViewCommand(String commandline){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.searchSchedule(commandline);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 22
    }
  },
  {
    "path": "src/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * Duke is a task scheduler using console for input and output of task and schedules"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String filePath \u003d \"data/Task.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 58
    }
  },
  {
    "path": "src/DukeTest/Parser/ParseTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package DukeTest.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class ParseTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**Test convertDateTime in class Parse**/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void testConvertDateTime() throws Throwable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        Parser testing \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String dateToConvert \u003d \"31/12/2019 23:59\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String output \u003d testing.convertDateTime(dateToConvert);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assertEquals(\"31 Dec 2019 11:59 PM\", output);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void testParseTodo() throws Throwable {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        Parser testing \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String tryWrongCommand \u003d \"todotask 1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String output \u003d testing.parseTodo(tryWrongCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assertEquals(\"task 1\", output);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "stenleyho": 28
    }
  },
  {
    "path": "src/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 7
    }
  },
  {
    "path": "src/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Command.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * The class of Parser"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * Used to make sense of user input and prompt errors"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * Using switch to filter user command"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @param commandline : its the user command input from Duke class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @throws DukeException : this throw an error if user type wrong command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static Command parse (String commandline) throws DukeException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] command \u003d commandline.split(\" \",2);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        switch(command[0].toUpperCase())"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"LIST\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new ListCommand(commandline);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"BYE\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"DONE\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DoneCommand(commandline);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"DELETE\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DeleteCommand(commandline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"TODO\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new TodoCommand(commandline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"DEADLINE\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DeadlineCommand(commandline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"EVENT\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new EventCommand(commandline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"FIND\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new FindCommand(commandline);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"VIEW\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new ViewCommand(commandline);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                throw new DukeException(\"Please enter \u0027Todo\u0027 or \u0027Deadline /by\u0027 or \u0027Event /at\u0027 to create task. \\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                +\"Enter \u0027Delete\u0027 to remove task. \u0027List\u0027 to see tasks. \u0027View\u0027 to view schedules and \u0027Bye\u0027 to exit\"); //+ System.lineSeparator()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static Command parseFile (String commandline) throws DukeException"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * To check if the file is corrupted"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] command \u003d commandline.split(\" \",2);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assert  command !\u003d null; // Assume there are always T,D or E in the file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        switch(command[0].toUpperCase())"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new TodoCommand(commandline);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DeadlineCommand(commandline);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new EventCommand(commandline);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                throw new DukeException(\"Corrupted file. Please replace the file Task.txt in Data folder\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String parseTodo (String commandline) throws DukeException"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * to check if user enter todo command correctly"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d 2){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Todo input. Enter todo \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr[1].equals(\"\")){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Todo cannot be empty\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return linearr[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseDeadline(String commandline) throws DukeException"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * to check if user enter deadline command correctly"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d2){"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Deadline input\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String DL_date[] \u003d linearr[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (DL_date.length !\u003d 2){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Deadline input. Enter deadline /by \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (DL_date[1].equals(\"\")){"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Deadline date cannot be empty\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        DL_date[1] \u003d convertDateTime(DL_date[1]);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assert DL_date !\u003dnull;  // assume the date can never \u003d null"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return DL_date;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseEvent(String commandline) throws DukeException"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * to check if user enter event command correctly"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d2){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Event input\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String E_date[] \u003d linearr[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (E_date.length !\u003d 2){"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Event input. Enter event /at \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (E_date[1].equals(\"\")){"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Event date cannot be empty\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        E_date[1] \u003d convertDateTime(E_date[1]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assert E_date !\u003dnull;  // assume the date can never \u003d null"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return E_date;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * Returns a formated time as string."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * It checks the format of date and time from user input."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * It accepts dd/mm/yyyy hhmm format."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @param userDate is a raw data input from user."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @return output as a desired date and time format dd MMM yyyy \u0027at\u0027 HHmm \u0027hrs\u0027"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String convertDateTime(String userDate) throws DukeException"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String dateToConvert \u003d userDate.trim();"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            DateFormat outputformat \u003d new SimpleDateFormat(\"dd MMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Date date \u003dnull;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            String output \u003d null;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                date \u003d df.parse(dateToConvert);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                output \u003d outputformat.format(date);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            catch (ParseException e) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                throw new DukeException(\"Invalid date and time format. Please use this format - dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    public static String parseSchedule(String userDate) throws DukeException"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        String trimedSchedule \u003d userDate.trim();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        try{"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//            if(trimedSchedule)"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//            return output;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        catch (ParseException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//            throw new DukeException(\"Invalid date and time format. Please use this format - dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseTodoFile (String commandline) throws DukeException"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \\\\| \");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return linearr;"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseEventFile(String commandline) throws DukeException"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] lineEvent;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        lineEvent \u003d commandline.split(\" \\\\| \");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return lineEvent;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseDeadlineFile(String commandline) throws DukeException"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] lineDeadline;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        lineDeadline \u003d commandline.split(\" \\\\| \");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return lineDeadline;"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static int parseIntegerParameter(String commandline) throws DukeException"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d2){"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid command\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        int intNum\u003d0;"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            intNum \u003d Integer.parseInt(linearr[1]);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (NumberFormatException  e)"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(\"Incorrect command\" + e.getMessage());"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return intNum;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 227
    }
  },
  {
    "path": "src/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private static String strFilePath \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Storage (String strFileInput){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.strFilePath \u003d strFileInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static ArrayList\u003cTask\u003e readTasksFromFile()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ArrayList\u003cTask\u003e t \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            File f \u003d new File(strFilePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                line \u003d s.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                Command c \u003d Parser.parseFile(line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                c.readfileformat(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException | IOException e)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return tasks.getTaskitems();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        File f \u003d new File(strFilePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ArrayList\u003cTask\u003e t;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                t \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        t \u003d readTasksFromFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void save(TaskList tasks)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                saveFile(strFilePath, \"\", false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                    saveFile(strFilePath, tasks.get(i).writeToFile(), i \u003d\u003d 0 ? false : true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (IOException e)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Unable to write into file!!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void saveFile(String filePath, String texttoadd , boolean isappend)  throws IOException"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (isappend\u003d\u003dtrue)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        fw.write(texttoadd);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        fw.write(System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 94
    }
  },
  {
    "path": "src/Tasklist/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public  Deadlines(String description, String by)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone\u003dfalse;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"[D] [\" + super.getStatusIcon() +\"]\" + super.getDescription()  + \"(by: \" + by + \")\" ;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String writeToFile()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"D\" + super.writeToFile() + super.getDescription() + \" | \" + by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 33
    }
  },
  {
    "path": "src/Tasklist/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Events(String description, String at)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone\u003dfalse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"[E] [\" + super.getStatusIcon() +\"]\" + super.getDescription() + \"(at: \" + at + \")\" ;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String writeToFile()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"E\" + super.writeToFile() + super.getDescription() + \" | \" + at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 32
    }
  },
  {
    "path": "src/Tasklist/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    protected LocalDateTime date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void markDone(boolean isDone)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String getDescription()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String writeToFile()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        Integer intIsDone \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \" | \" + intIsDone + \" | \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 40
    }
  },
  {
    "path": "src/Tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//import static Parser.Parser.parseSchedule;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskitems;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    private static String strFilePath \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskinput)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (taskinput.isEmpty())"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            taskitems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"OOPS!!! There is empty task\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems \u003d taskinput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskitems(){"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return taskitems;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public int size(){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return taskitems.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Task get(int position){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return taskitems.get(position);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public TaskList()"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void addTask(Task t, boolean bWrite){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems.add(t);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (bWrite \u003d\u003d true){"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            int k \u003d taskitems.size();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println( taskitems.get(k-1));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Now you have \" + taskitems.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void displayTasks()"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        for(int i\u003d0; i \u003c taskitems.size(); i++)"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(i + 1 + \". \" + taskitems.get(i));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void markDone(int pos, boolean bPrompt) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems.get(pos-1).markDone(true);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (bPrompt\u003d\u003dtrue) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println( taskitems.get(pos-1));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void removeItem(int pos) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println( taskitems.get(pos-1).toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems.remove(pos-1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Now you have \" + taskitems.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * This method find keyword/s within all the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @param wordSearch : is the input from user."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void searchTask(String wordSearch) throws DukeException {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        int setFound \u003d 0;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] searchSplit \u003d wordSearch.split(\" \",2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit.length !\u003d 2){"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit[1].equals(\"\")){"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Enter something to search\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        for (int i \u003d 0; i \u003c taskitems.size(); i++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (taskitems.get(i).getDescription().contains(searchSplit[1])) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                System.out.println(taskitems.get(i));"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                setFound \u003d 1;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (setFound \u003d\u003d 0){"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException (\"No items found\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void searchSchedule(String scheduleSearch) throws DukeException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        int setFound \u003d 0;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] searchSplit \u003d scheduleSearch.split(\" \",2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit.length !\u003d 2){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit[1].equals(\"\")){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Enter something to search\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        String trimed \u003d parseSchedule(searchSplit[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String trimed \u003d searchSplit[1].trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Your Schedule for \" + trimed + \" are as follow\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        for (int i \u003d 0; i \u003c taskitems.size(); i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (taskitems.get(i).toString().contains(trimed)) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                System.out.println(taskitems.get(i));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                setFound \u003d 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (setFound \u003d\u003d 0){"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException (\"No items found\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 131
    }
  },
  {
    "path": "src/Tasklist/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Todo extends Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Todo(String description)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone\u003dfalse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"[T] [\" + super.getStatusIcon() +\"]\" + super.getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String writeToFile()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"T\" + super.writeToFile() + super.getDescription() ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 30
    }
  },
  {
    "path": "src/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * The user interface of Duke"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"------------------------------------------------------------\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void showLine(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        printUI( \"------------------------------------------------------------\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private static void printUI(String printline){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(printline);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void showError(String message){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        printUI( message );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void sayBye(){"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        printUI(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 41
    }
  },
  {
    "path": "src/main/java/Command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class ByeCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ByeCommand(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isExit\u003dtrue;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 18
    }
  },
  {
    "path": "src/main/java/Command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected static String commandline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Command(String commandline){"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.commandline \u003d commandline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Command(){"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public boolean isExit(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        throw new UnsupportedOperationException(\"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void readfileformat(TaskList tasks) throws DukeException, IOException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        throw new UnsupportedOperationException(\"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 32
    }
  },
  {
    "path": "src/main/java/Command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class DeadlineCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public DeadlineCommand(String commandline){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Deadlines(Parser.parseDeadline(commandline)[0], Parser.parseDeadline(commandline)[1]), true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void readfileformat(TaskList tasks) throws DukeException, IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Deadlines(Parser.parseDeadlineFile(commandline)[2], Parser.parseDeadlineFile(commandline)[3]), false);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if(Parser.parseDeadlineFile(commandline)[1].equals(\"1\")){"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                tasks.markDone(tasks.size(),false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 35
    }
  },
  {
    "path": "src/main/java/Command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public DeleteCommand(String commandline){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.removeItem(Parser.parseIntegerParameter(commandline));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 25
    }
  },
  {
    "path": "src/main/java/Command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class DoneCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public DoneCommand(String commandline){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException{"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.markDone(Parser.parseIntegerParameter(commandline),true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 25
    }
  },
  {
    "path": "src/main/java/Command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public EventCommand(String commandline){"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Events(Parser.parseEvent(commandline)[0], Parser.parseEvent(commandline)[1]), true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void readfileformat(TaskList tasks) throws DukeException, IOException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Events(Parser.parseEventFile(commandline)[2], Parser.parseEventFile(commandline)[3]), false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if(Parser.parseEventFile(commandline)[1].equals(\"1\")){"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                tasks.markDone(tasks.size(),false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 37
    }
  },
  {
    "path": "src/main/java/Command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public FindCommand(String commandline){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.searchTask(commandline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public FindCommand(String commandline){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.searchTask(commandline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 052b4d35a43d775d5c0194545db262f21223b209"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 47
    }
  },
  {
    "path": "src/main/java/Command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ListCommand(String commandline){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        tasks.displayTasks();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 18
    }
  },
  {
    "path": "src/main/java/Command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class TodoCommand extends Command{"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public TodoCommand(String commandline){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Todo(Parser.parseTodo(commandline)),true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void readfileformat(TaskList tasks) throws DukeException, IOException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.addTask(new Todo(Parser.parseTodoFile(commandline)[2]),false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if(Parser.parseTodoFile(commandline)[1].equals(\"1\")){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                tasks.markDone(tasks.size(),false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 38
    }
  },
  {
    "path": "src/main/java/Command/ViewCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ViewCommand(String commandline){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.searchSchedule(commandline);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Command;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.TaskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.Storage;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class ViewCommand extends Command {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ViewCommand(String commandline){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(commandline);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks.searchSchedule(commandline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException e){"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 052b4d35a43d775d5c0194545db262f21223b209"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 47
    }
  },
  {
    "path": "src/main/java/Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * Duke is a task scheduler using console for input and output of task and schedules"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String filePath \u003d \"data/Task.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Storage.*;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * Duke is a task scheduler using console for input and output of task and schedules"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String filePath \u003d \"data/Task.txt\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        new Duke(filePath).run();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ui.sayBye();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 052b4d35a43d775d5c0194545db262f21223b209"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 119
    }
  },
  {
    "path": "src/main/java/DukeTest/Parser/ParseTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package DukeTest.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class ParseTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**Test convertDateTime in class Parse**/"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void testConvertDateTime() throws Throwable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        Parser testing \u003d new Parser();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String dateToConvert \u003d \"31/12/2019 23:59\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String output \u003d testing.convertDateTime(dateToConvert);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assertEquals(\"31 Dec 2019 11:59 PM\", output);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void testParseTodo() throws Throwable {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        Parser testing \u003d new Parser();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String tryWrongCommand \u003d \"todotask 1\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String output \u003d testing.parseTodo(tryWrongCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assertEquals(\"task 1\", output);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "stenleyho": 28
    }
  },
  {
    "path": "src/main/java/Exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public DukeException(String message){"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 7
    }
  },
  {
    "path": "src/main/java/Parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Command.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * The class of Parser"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * Used to make sense of user input and prompt errors"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * Using switch to filter user command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @param commandline : its the user command input from Duke class"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @throws DukeException : this throw an error if user type wrong command"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static Command parse (String commandline) throws DukeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] command \u003d commandline.split(\" \",2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        switch(command[0].toUpperCase())"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"LIST\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new ListCommand(commandline);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"BYE\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"DONE\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DoneCommand(commandline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"DELETE\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DeleteCommand(commandline);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"TODO\":"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new TodoCommand(commandline);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"DEADLINE\":"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DeadlineCommand(commandline);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"EVENT\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new EventCommand(commandline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"FIND\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new FindCommand(commandline);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"VIEW\":"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new ViewCommand(commandline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                throw new DukeException(\"Please enter \u0027Todo\u0027 or \u0027Deadline /by\u0027 or \u0027Event /at\u0027 to create task. \\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                +\"Enter \u0027Delete\u0027 to remove task. \u0027List\u0027 to see tasks. \u0027View\u0027 to view schedules and \u0027Bye\u0027 to exit\"); //+ System.lineSeparator()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static Command parseFile (String commandline) throws DukeException"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * To check if the file is corrupted"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] command \u003d commandline.split(\" \",2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assert  command !\u003d null; // Assume there are always T,D or E in the file"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        switch(command[0].toUpperCase())"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new TodoCommand(commandline);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DeadlineCommand(commandline);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new EventCommand(commandline);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                throw new DukeException(\"Corrupted file. Please replace the file Task.txt in Data folder\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String parseTodo (String commandline) throws DukeException"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * to check if user enter todo command correctly"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d 2){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Todo input. Enter todo \");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr[1].equals(\"\")){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Todo cannot be empty\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return linearr[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseDeadline(String commandline) throws DukeException"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * to check if user enter deadline command correctly"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d2){"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Deadline input\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String DL_date[] \u003d linearr[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (DL_date.length !\u003d 2){"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Deadline input. Enter deadline /by \");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (DL_date[1].equals(\"\")){"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Deadline date cannot be empty\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        DL_date[1] \u003d convertDateTime(DL_date[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assert DL_date !\u003dnull;  // assume the date can never \u003d null"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return DL_date;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseEvent(String commandline) throws DukeException"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * to check if user enter event command correctly"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d2){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Event input\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String E_date[] \u003d linearr[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (E_date.length !\u003d 2){"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Event input. Enter event /at \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (E_date[1].equals(\"\")){"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Event date cannot be empty\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        E_date[1] \u003d convertDateTime(E_date[1]);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assert E_date !\u003dnull;  // assume the date can never \u003d null"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return E_date;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * Returns a formated time as string."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * It checks the format of date and time from user input."
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * It accepts dd/mm/yyyy hhmm format."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @param userDate is a raw data input from user."
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @return output as a desired date and time format dd MMM yyyy \u0027at\u0027 HHmm \u0027hrs\u0027"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String convertDateTime(String userDate) throws DukeException"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String dateToConvert \u003d userDate.trim();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            DateFormat outputformat \u003d new SimpleDateFormat(\"dd MMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Date date \u003dnull;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            String output \u003d null;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                date \u003d df.parse(dateToConvert);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                output \u003d outputformat.format(date);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            catch (ParseException e) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                throw new DukeException(\"Invalid date and time format. Please use this format - dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    public static String parseSchedule(String userDate) throws DukeException"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        String trimedSchedule \u003d userDate.trim();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        try{"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//            if(trimedSchedule)"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//            return output;"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        catch (ParseException e) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//            throw new DukeException(\"Invalid date and time format. Please use this format - dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseTodoFile (String commandline) throws DukeException"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \\\\| \");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return linearr;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseEventFile(String commandline) throws DukeException"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] lineEvent;"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        lineEvent \u003d commandline.split(\" \\\\| \");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return lineEvent;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseDeadlineFile(String commandline) throws DukeException"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] lineDeadline;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        lineDeadline \u003d commandline.split(\" \\\\| \");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return lineDeadline;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static int parseIntegerParameter(String commandline) throws DukeException"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d2){"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid command\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        int intNum\u003d0;"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            intNum \u003d Integer.parseInt(linearr[1]);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (NumberFormatException  e)"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(\"Incorrect command\" + e.getMessage());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return intNum;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Parser;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Ui.Ui;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Command.*;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.text.*;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.text.DateFormat;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * The class of Parser"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * Used to make sense of user input and prompt errors"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * Using switch to filter user command"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @param commandline : its the user command input from Duke class"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @throws DukeException : this throw an error if user type wrong command"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static Command parse (String commandline) throws DukeException"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        LocalDateTime dateTime \u003d null;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] command \u003d commandline.split(\" \",2);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        switch(command[0].toUpperCase())"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"LIST\":"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new ListCommand(commandline);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"BYE\":"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"DONE\":"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DoneCommand(commandline);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"DELETE\":"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DeleteCommand(commandline);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"TODO\":"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new TodoCommand(commandline);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"DEADLINE\":"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DeadlineCommand(commandline);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"EVENT\":"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new EventCommand(commandline);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"FIND\":"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new FindCommand(commandline);"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"VIEW\":"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new ViewCommand(commandline);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                throw new DukeException(\"Please enter \u0027Todo\u0027 or \u0027Deadline /by\u0027 or \u0027Event /at\u0027 to create task. \\n\""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                +\"Enter \u0027Delete\u0027 to remove task. \u0027List\u0027 to see tasks. \u0027View\u0027 to view schedules and \u0027Bye\u0027 to exit\"); //+ System.lineSeparator()"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static Command parseFile (String commandline) throws DukeException"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * To check if the file is corrupted"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] command \u003d commandline.split(\" \",2);"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assert  command !\u003d null; // Assume there are always T,D or E in the file"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        switch(command[0].toUpperCase())"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new TodoCommand(commandline);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new DeadlineCommand(commandline);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return new EventCommand(commandline);"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                throw new DukeException(\"Corrupted file. Please replace the file Task.txt in Data folder\");"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String parseTodo (String commandline) throws DukeException"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * to check if user enter todo command correctly"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d 2){"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Todo input. Enter todo \");"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr[1].equals(\"\")){"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Todo cannot be empty\");"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return linearr[1];"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseDeadline(String commandline) throws DukeException"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * to check if user enter deadline command correctly"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d2){"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Deadline input\");"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String DL_date[] \u003d linearr[1].split(\"/by\", 2);"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (DL_date.length !\u003d 2){"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Deadline input. Enter deadline /by \");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (DL_date[1].equals(\"\")){"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Deadline date cannot be empty\");"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        DL_date[1] \u003d convertDateTime(DL_date[1]);"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assert DL_date !\u003dnull;  // assume the date can never \u003d null"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return DL_date;"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseEvent(String commandline) throws DukeException"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        /**"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         * to check if user enter event command correctly"
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "         */"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d2){"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Event input\");"
      },
      {
        "lineNumber": 357,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 358,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String E_date[] \u003d linearr[1].split(\"/at\", 2);"
      },
      {
        "lineNumber": 359,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 360,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (E_date.length !\u003d 2){"
      },
      {
        "lineNumber": 361,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid Event input. Enter event /at \");"
      },
      {
        "lineNumber": 362,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 363,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (E_date[1].equals(\"\")){"
      },
      {
        "lineNumber": 364,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Event date cannot be empty\");"
      },
      {
        "lineNumber": 365,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 366,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 367,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        E_date[1] \u003d convertDateTime(E_date[1]);"
      },
      {
        "lineNumber": 368,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        assert E_date !\u003dnull;  // assume the date can never \u003d null"
      },
      {
        "lineNumber": 369,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return E_date;"
      },
      {
        "lineNumber": 370,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 371,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 372,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 373,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * Returns a formated time as string."
      },
      {
        "lineNumber": 374,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * It checks the format of date and time from user input."
      },
      {
        "lineNumber": 375,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * It accepts dd/mm/yyyy hhmm format."
      },
      {
        "lineNumber": 376,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @param userDate is a raw data input from user."
      },
      {
        "lineNumber": 377,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @return output as a desired date and time format dd MMM yyyy \u0027at\u0027 HHmm \u0027hrs\u0027"
      },
      {
        "lineNumber": 378,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 379,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 380,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String convertDateTime(String userDate) throws DukeException"
      },
      {
        "lineNumber": 381,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 382,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String dateToConvert \u003d userDate.trim();"
      },
      {
        "lineNumber": 383,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 384,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            DateFormat df \u003d new SimpleDateFormat(\"dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 385,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            DateFormat outputformat \u003d new SimpleDateFormat(\"dd MMM yyyy hh:mm a\");"
      },
      {
        "lineNumber": 386,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Date date \u003dnull;"
      },
      {
        "lineNumber": 387,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            String output \u003d null;"
      },
      {
        "lineNumber": 388,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            try{"
      },
      {
        "lineNumber": 389,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                date \u003d df.parse(dateToConvert);"
      },
      {
        "lineNumber": 390,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                output \u003d outputformat.format(date);"
      },
      {
        "lineNumber": 391,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                return output;"
      },
      {
        "lineNumber": 392,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 393,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            catch (ParseException e) {"
      },
      {
        "lineNumber": 394,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                throw new DukeException(\"Invalid date and time format. Please use this format - dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 395,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 396,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 397,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 398,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    public static String parseSchedule(String userDate) throws DukeException"
      },
      {
        "lineNumber": 399,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    {"
      },
      {
        "lineNumber": 400,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        String trimedSchedule \u003d userDate.trim();"
      },
      {
        "lineNumber": 401,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//"
      },
      {
        "lineNumber": 402,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        try{"
      },
      {
        "lineNumber": 403,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//            if(trimedSchedule)"
      },
      {
        "lineNumber": 404,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//            return output;"
      },
      {
        "lineNumber": 405,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 406,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        catch (ParseException e) {"
      },
      {
        "lineNumber": 407,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//            throw new DukeException(\"Invalid date and time format. Please use this format - dd/MM/yyyy HH:mm\");"
      },
      {
        "lineNumber": 408,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 409,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 410,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 411,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseTodoFile (String commandline) throws DukeException"
      },
      {
        "lineNumber": 412,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 413,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 414,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \\\\| \");"
      },
      {
        "lineNumber": 415,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return linearr;"
      },
      {
        "lineNumber": 416,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 417,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 418,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseEventFile(String commandline) throws DukeException"
      },
      {
        "lineNumber": 419,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 420,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] lineEvent;"
      },
      {
        "lineNumber": 421,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        lineEvent \u003d commandline.split(\" \\\\| \");"
      },
      {
        "lineNumber": 422,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return lineEvent;"
      },
      {
        "lineNumber": 423,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 424,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 425,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static String[] parseDeadlineFile(String commandline) throws DukeException"
      },
      {
        "lineNumber": 426,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 427,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] lineDeadline;"
      },
      {
        "lineNumber": 428,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        lineDeadline \u003d commandline.split(\" \\\\| \");"
      },
      {
        "lineNumber": 429,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return lineDeadline;"
      },
      {
        "lineNumber": 430,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 431,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 432,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static int parseIntegerParameter(String commandline) throws DukeException"
      },
      {
        "lineNumber": 433,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 434,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String [] linearr;"
      },
      {
        "lineNumber": 435,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        linearr \u003d commandline.split(\" \", 2);"
      },
      {
        "lineNumber": 436,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 437,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr.length !\u003d2){"
      },
      {
        "lineNumber": 438,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid command\");"
      },
      {
        "lineNumber": 439,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 440,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (linearr[1].equals(\"\")) {"
      },
      {
        "lineNumber": 441,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 442,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 443,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 444,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        int intNum\u003d0;"
      },
      {
        "lineNumber": 445,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 446,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            intNum \u003d Integer.parseInt(linearr[1]);"
      },
      {
        "lineNumber": 447,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 448,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (NumberFormatException  e)"
      },
      {
        "lineNumber": 449,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 450,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Ui.showError(\"Incorrect command\" + e.getMessage());"
      },
      {
        "lineNumber": 451,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 452,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 453,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return intNum;"
      },
      {
        "lineNumber": 454,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 455,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 052b4d35a43d775d5c0194545db262f21223b209"
      },
      {
        "lineNumber": 456,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 456
    }
  },
  {
    "path": "src/main/java/Storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Tasklist.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private static String strFilePath \u003d \"\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Storage (String strFileInput){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.strFilePath \u003d strFileInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static ArrayList\u003cTask\u003e readTasksFromFile()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ArrayList\u003cTask\u003e t \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            File f \u003d new File(strFilePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                line \u003d s.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                Command c \u003d Parser.parseFile(line);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                c.readfileformat(tasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (DukeException | IOException e)"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return tasks.getTaskitems();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        File f \u003d new File(strFilePath);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        ArrayList\u003cTask\u003e t;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                t \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        t \u003d readTasksFromFile();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return t;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void save(TaskList tasks)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                saveFile(strFilePath, \"\", false);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                    saveFile(strFilePath, tasks.get(i).writeToFile(), i \u003d\u003d 0 ? false : true);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        catch (IOException e)"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Unable to write into file!!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void saveFile(String filePath, String texttoadd , boolean isappend)  throws IOException"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        FileWriter fw;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (isappend\u003d\u003dtrue)"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            fw \u003d new FileWriter(filePath,true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        fw.write(texttoadd);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        fw.write(System.getProperty(\"line.separator\"));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 94
    }
  },
  {
    "path": "src/main/java/Tasklist/Deadlines.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Deadlines extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public  Deadlines(String description, String by)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone\u003dfalse;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"[D] [\" + super.getStatusIcon() +\"]\" + super.getDescription()  + \"(by: \" + by + \")\" ;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String writeToFile()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"D\" + super.writeToFile() + super.getDescription() + \" | \" + by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 33
    }
  },
  {
    "path": "src/main/java/Tasklist/Events.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Events extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Events(String description, String at)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone\u003dfalse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"[E] [\" + super.getStatusIcon() +\"]\" + super.getDescription() + \"(at: \" + at + \")\" ;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String writeToFile()"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"E\" + super.writeToFile() + super.getDescription() + \" | \" + at;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 32
    }
  },
  {
    "path": "src/main/java/Tasklist/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    protected LocalDateTime date;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void markDone(boolean isDone)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String getDescription()"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String toString(){"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"]\" + this.getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String writeToFile()"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        Integer intIsDone \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \" | \" + intIsDone + \" | \";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 40
    }
  },
  {
    "path": "src/main/java/Tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//import static Parser.Parser.parseSchedule;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskitems;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    private static String strFilePath \u003d \"\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskinput)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (taskinput.isEmpty())"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            taskitems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"OOPS!!! There is empty task\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems \u003d taskinput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskitems(){"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return taskitems;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public int size(){"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return taskitems.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Task get(int position){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return taskitems.get(position);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public TaskList()"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void addTask(Task t, boolean bWrite){"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems.add(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (bWrite \u003d\u003d true){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            int k \u003d taskitems.size();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println( taskitems.get(k-1));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Now you have \" + taskitems.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void displayTasks()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        for(int i\u003d0; i \u003c taskitems.size(); i++)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(i + 1 + \". \" + taskitems.get(i));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void markDone(int pos, boolean bPrompt) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems.get(pos-1).markDone(true);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (bPrompt\u003d\u003dtrue) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println( taskitems.get(pos-1));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void removeItem(int pos) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println( taskitems.get(pos-1).toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems.remove(pos-1);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Now you have \" + taskitems.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * This method find keyword/s within all the task list."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @param wordSearch : is the input from user."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void searchTask(String wordSearch) throws DukeException {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        int setFound \u003d 0;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] searchSplit \u003d wordSearch.split(\" \",2);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit.length !\u003d 2){"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit[1].equals(\"\")){"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Enter something to search\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        for (int i \u003d 0; i \u003c taskitems.size(); i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (taskitems.get(i).getDescription().contains(searchSplit[1])) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                System.out.println(taskitems.get(i));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                setFound \u003d 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (setFound \u003d\u003d 0){"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException (\"No items found\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void searchSchedule(String scheduleSearch) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        int setFound \u003d 0;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] searchSplit \u003d scheduleSearch.split(\" \",2);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit.length !\u003d 2){"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit[1].equals(\"\")){"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Enter something to search\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        String trimed \u003d parseSchedule(searchSplit[1]);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String trimed \u003d searchSplit[1].trim();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Your Schedule for \" + trimed + \" are as follow\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        for (int i \u003d 0; i \u003c taskitems.size(); i++) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (taskitems.get(i).toString().contains(trimed)) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                System.out.println(taskitems.get(i));"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                setFound \u003d 1;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (setFound \u003d\u003d 0){"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException (\"No items found\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import Exception.DukeException;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//import static Parser.Parser.parseSchedule;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskitems;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//    private static String strFilePath \u003d \"\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskinput)"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (taskinput.isEmpty())"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            taskitems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"OOPS!!! There is empty task\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems \u003d taskinput;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskitems(){"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return taskitems;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public int size(){"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return taskitems.size();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Task get(int position){"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return taskitems.get(position);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public TaskList()"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void addTask(Task t, boolean bWrite){"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems.add(t);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (bWrite \u003d\u003d true){"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            int k \u003d taskitems.size();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println( taskitems.get(k-1));"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Now you have \" + taskitems.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void displayTasks()"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        for(int i\u003d0; i \u003c taskitems.size(); i++)"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(i + 1 + \". \" + taskitems.get(i));"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void markDone(int pos, boolean bPrompt) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems.get(pos-1).markDone(true);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (bPrompt\u003d\u003dtrue) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            System.out.println( taskitems.get(pos-1));"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void removeItem(int pos) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println( taskitems.get(pos-1).toString());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        taskitems.remove(pos-1);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Now you have \" + taskitems.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * This method find keyword/s within all the task list."
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     * @param wordSearch : is the input from user."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "     */"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void searchTask(String wordSearch) throws DukeException {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        int setFound \u003d 0;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] searchSplit \u003d wordSearch.split(\" \",2);"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit.length !\u003d 2){"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit[1].equals(\"\")){"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Enter something to search\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        for (int i \u003d 0; i \u003c taskitems.size(); i++) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (taskitems.get(i).getDescription().contains(searchSplit[1])) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                System.out.println(taskitems.get(i));"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                setFound \u003d 1;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (setFound \u003d\u003d 0){"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException (\"No items found\");"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void searchSchedule(String scheduleSearch) throws DukeException {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        int setFound \u003d 0;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String[] searchSplit \u003d scheduleSearch.split(\" \",2);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit.length !\u003d 2){"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (searchSplit[1].equals(\"\")){"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException(\"Enter something to search\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "//        String trimed \u003d parseSchedule(searchSplit[1]);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String trimed \u003d searchSplit[1].trim();"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Your Schedule for \" + trimed + \" are as follow\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        for (int i \u003d 0; i \u003c taskitems.size(); i++) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            if (taskitems.get(i).toString().contains(trimed)) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                System.out.println(taskitems.get(i));"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                setFound \u003d 1;"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        if (setFound \u003d\u003d 0){"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "            throw new DukeException (\"No items found\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        }"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 052b4d35a43d775d5c0194545db262f21223b209"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 264
    }
  },
  {
    "path": "src/main/java/Tasklist/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Todo extends Task"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "{"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public Todo(String description)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone\u003dfalse;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void setDone(boolean done) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        isDone \u003d done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"[T] [\" + super.getStatusIcon() +\"]\" + super.getDescription();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String writeToFile()"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return \"T\" + super.writeToFile() + super.getDescription() ;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 30
    }
  },
  {
    "path": "src/main/java/Ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Ui;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * The user interface of Duke"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"------------------------------------------------------------\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void showLine(){"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        printUI( \"------------------------------------------------------------\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private static void printUI(String printline){"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(printline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void showError(String message){"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        printUI( message );"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void sayBye(){"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        printUI(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "package Ui;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "/**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " * The user interface of Duke"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "stenleyho"
        },
        "content": " */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public void showWelcome(){"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"Hello! I\u0027m duke.Duke\\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(\"------------------------------------------------------------\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void showLine(){"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        printUI( \"------------------------------------------------------------\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    private static void printUI(String printline){"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        System.out.println(printline);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public String readCommand(){"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void showError(String message){"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        printUI( message );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    public static void sayBye(){"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "        printUI(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "stenleyho"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "}"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "stenleyho"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e 052b4d35a43d775d5c0194545db262f21223b209"
      }
    ],
    "authorContributionMap": {
      "stenleyho": 85
    }
  }
]

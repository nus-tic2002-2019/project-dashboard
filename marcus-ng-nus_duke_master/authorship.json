[
  {
    "path": "production/main/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "T|1|read books "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "D|1|do accounts|19-Jul-19 06:30 PM"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "E|0|meeting|Suntec 8pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "T|1|swimming"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "E|1|boxing match|Gym"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "D|1|do math|23-Sep-19 08:00 PM"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "E|1|Joker Movie|Cathay 7pm"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 7
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Duke class, main() is located here"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Ensures execution of Duke program as long as isExit is false"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @param isExit tells program to exit, set to false by default"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Writes tasks entered by user at the end of program right before exiting"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import subclass.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Storage.loadFile(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (ParseException | FileNotFoundException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayError();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (todoException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Ui.showWelcome();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                c.execute(tasks, ui);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                isExit \u003d c.isExit;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            } catch (IOException | DukeException | ParseException | todoException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                Ui.displayError();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                Ui.showLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void main(String[] args) throws DukeException, todoException, IOException, ParseException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        //load txt file"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        String file_path \u003d \"/Users/marcus/Desktop/marcus/m/NUS/TIC2002 Introduction to Software Engineering/duke_new/src/main/java/taskList.txt\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        new Duke(file_path).run();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        //save Task.txt"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Storage.writeToFile(file_path, Storage.toTxt(Task.getOutput()));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 47,
      "-": 11
    }
  },
  {
    "path": "src/main/java/subclass/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static final String INPUT \u003d \"bye\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public ByeCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws IOException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        ui.goodBye();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 18
    }
  },
  {
    "path": "src/main/java/subclass/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public boolean isExit;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public String input;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public Command(boolean isExit, String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws IOException, DukeException, ParseException, todoException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        //empty;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 18
    }
  },
  {
    "path": "src/main/java/subclass/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Deadline type tasks only accepts date of specified format"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @param format1 defines what format the date input by user is"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @return Deadline object added successfully into list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @throws java.text.ParseException if incorrect date format is entered"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    private Date date_by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    private SimpleDateFormat format1 \u003d new SimpleDateFormat(\"dd-MMM-yy hh:mm a\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public Deadline(String description, String by) throws ParseException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        date_by \u003d format1.parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + format1.format(date_by) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 30
    }
  },
  {
    "path": "src/main/java/subclass/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " *  Deadline tasks records users input as description after \"deadline\" command, and also date of deadline after \"/by\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @param input is entered by user after \"deadline\" command"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @param by is date-time entered by user after \"/by\" keyword in the input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Display error when any of the following occurs:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " *     @throws java.io.IOException when no input entered after \"deadline\" command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " *     @throws java.text.ParseException when date format entered after \"/by\" is wrong"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static final String INPUT \u003d \"deadline\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    DeadlineCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws IOException, ParseException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String input_items \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String by \u003d Parser.parseDeadline_by(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String input_string \u003d Parser.parseTask_description(input_items);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Task tmp \u003d Task.add_task(new Deadline(input_string, by));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayGotIt();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            System.out.println(\"\\t\\t\" + tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            System.out.println(\"\\t\\tNow you have \" + Task.word_count + \" tasks in list.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayDeadlineEventError();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (ParseException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayError();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayError_dateFormat();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 48
    }
  },
  {
    "path": "src/main/java/subclass/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Delete command class"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @param input is input entered by user after \"delete\" command"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @throws subclass.DukeException if \"delete\" command is entered without index"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @throws java.lang.AssertionError when index entered after \"delete\" command is lesser than 0"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static final String INPUT \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    //private int task_no;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    DeleteCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String input_items \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            int task_option \u003d Integer.parseInt(input_items);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            assert task_option \u003e 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Task.removeTask(task_option);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayError_noItem();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (AssertionError e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showError(\"Task Index must be larger than 0!\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 36
    }
  },
  {
    "path": "src/main/java/subclass/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Done command, marking tasks in list as done when task(s) are completed"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Displays error if:"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " *      no task index was entered"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " *      task index entered was invalid"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static final String INPUT \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    private int task_no;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public DoneCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String input_items \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            task_no \u003d Integer.parseInt(input_items);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            assert task_no \u003e 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Task tmp \u003d Task.markDone(task_no);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.markAsDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            System.out.println(\"\\t\\t\" + tmp);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayError_noItem();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (AssertionError e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showError(\"Task index must be larger than 0!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 40
    }
  },
  {
    "path": "src/main/java/subclass/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    //no code"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 5
    }
  },
  {
    "path": "src/main/java/subclass/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 14
    }
  },
  {
    "path": "src/main/java/subclass/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Records event type tasks, records string after \"event\" command as task description, and day + time after \"/at\""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Displays error when no input is entered after \"event\" command."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @param input is entered by user after \"event\" command"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @param at is date-time/place entered by user after \"/at\" keyword in command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static final String INPUT \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public EventCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws IOException, ParseException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String input_items \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String at \u003d Parser.parseEvent_at(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String input_string \u003d Parser.parseTask_description(input_items);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Task tmp \u003d Task.add_task(new Event(input_string, at));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayGotIt();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            System.out.println(\"\\t\\t\" + tmp);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            System.out.println(\"\\t\\tNow you have \" + Task.word_count + \" tasks in list.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayDeadlineEventError();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 40
    }
  },
  {
    "path": "src/main/java/subclass/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "Find command, displaying tasks containing input words by user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static final String INPUT \u003d \"find\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public String input_word \u003d \"\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public FindCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            input_word \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            if (Task.findTask(input_word).equals(\"\")){"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            System.out.println(\"\\tHere are the matching tasks in the list:\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            System.out.println(Task.findTask(input_word));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showError(\"No matching tasks found.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 34
    }
  },
  {
    "path": "src/main/java/subclass/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "Simple help menu display when \"help\" command is entered."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static final String INPUT \u003d \"help\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public HelpCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\n\\tCommands available:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t1. todo          adding simple tasks with only description\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tUsage: todo [description]\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\n\\t2. deadline          adding tasks with deadlines to meet\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tUsage: deadline [DESCRIPTION] /by [DATE]\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tNote: DATE must be in format: dd-MMM-yy hh:mm PM/AM\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\n\\t3. event          adding event tasks with duration\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tUsage: event [DESCRIPTION] /at [DATE, e.g. Mon 2-4pm]\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\n\\t4. list          displaying list of tasks entered\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tUsage: list\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\n\\t5. done          mark task as done\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tUsage: done [TASK INDEX]\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\n\\t6. delete          deleting task from list\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tUsage: delete [TASK INDEX]\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\n\\t7. find          find task(s) containing word\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tUsage: find [INPUT]\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\n\\t8. bye          exit Duke\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tUsage: bye\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 39
    }
  },
  {
    "path": "src/main/java/subclass/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Displaying full list of tasks entered by user"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Executing getList() method from Task class when \"list\" command is entered"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static final String INPUT \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public ListCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(Task.getList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 22
    }
  },
  {
    "path": "src/main/java/subclass/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "Parsing commands to execution of respective type of task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "Includes some simple parsing of string input."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static Command parse(String full_input) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        String input \u003d full_input;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        switch (input.split(\" \")[0]) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            case TodoCommand.INPUT:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                return new TodoCommand(false, input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            case DeadlineCommand.INPUT:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                return new DeadlineCommand(false, input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            case EventCommand.INPUT:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                return new EventCommand(false, input);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            case ListCommand.INPUT:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                return new ListCommand(false, \"\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            case DoneCommand.INPUT:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                return new DoneCommand(false, input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            case DeleteCommand.INPUT:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                return new DeleteCommand(false, input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            case FindCommand.INPUT:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                return new FindCommand(false, input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            case HelpCommand.INPUT:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                return new HelpCommand(false, \"\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            case ByeCommand.INPUT:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                return new ByeCommand(true, \"\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static String parseTask(String line) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return line.substring(line.indexOf(\" \") + 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static String parseDeadline_by(String line) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return line.substring(line.indexOf(\"/by\") + 4);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static String parseEvent_at(String line) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return line.substring(line.indexOf(\"/at\") + 4);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static String parseTask_description(String input_items) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return input_items.substring(0, input_items.indexOf(\"/\")-1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 53
    }
  },
  {
    "path": "src/main/java/subclass/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Storage class includes methods involving saving of the task list entered by user and also loading of saved list in .txt file"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Reading of .txt file and loading it to Duke"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void loadFile(String filePath) throws FileNotFoundException, ParseException, todoException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String line_input \u003d s.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            //add todo, if any"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            if (line_input.contains(\"T|\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                String input_items \u003d line_input.substring(line_input.lastIndexOf(\"|\") + 1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                String task_status_num \u003d line_input.substring(line_input.indexOf(\"|\") + 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                Task.add_task(new Todo(input_items));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                if (task_status_num.contains(\"1\")){"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                    Task.markDone(num);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            //add deadline, if any"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            if (line_input.contains(\"D|\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                String input_by \u003d line_input.substring(line_input.lastIndexOf(\"|\") + 1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                String input_items \u003d line_input.substring(line_input.indexOf(\"|\") + 3, line_input.lastIndexOf(\"|\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                String task_status_num \u003d line_input.substring(line_input.indexOf(\"|\") + 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                Task.add_task(new Deadline(input_items, input_by));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                if (task_status_num.contains(\"1\")){"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                    Task.markDone(num);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            //add event, if any"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            if (line_input.contains(\"E|\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                String input_by \u003d line_input.substring(line_input.lastIndexOf(\"|\") + 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                String input_items \u003d line_input.substring(line_input.indexOf(\"|\") + 3, line_input.lastIndexOf(\"|\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                String task_status_num \u003d line_input.substring(line_input.indexOf(\"|\") + 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                Task.add_task(new Event(input_items, input_by));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                if (task_status_num.contains(\"1\")){"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                    Task.markDone(num);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static String toTxt (String outputs) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        String newOutput \u003d outputs.replace(\"[\", \"\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\"]\", \",\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\"(\", \",\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\")\", \"\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\"\\u2713\", \"1\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\"\\u2718\", \"0\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\"by:\", \"\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\"at:\", \"\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\", \", \",\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\"  ,\", \",\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\",\", \"|\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        newOutput \u003d newOutput.replace(\" |\", \"|\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return newOutput;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 79
    }
  },
  {
    "path": "src/main/java/subclass/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Task class adding of tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @param description is the input from user after command entered"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Methods like getList() and findTask() are also included in this class"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * @param taskNo represents the index the specific task is at on the list displayed after performing getList() or \"list\" command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    private static ArrayList\u003cTask\u003e task_info \u003d new ArrayList\u003cTask\u003e(100);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static int word_count \u003d 0;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static Task add_task(Task description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            task_info.add(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            word_count++;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            return description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static String getList() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        String _list_ \u003d \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        for (Task elements : task_info) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            _list_ +\u003d \"\\n\\t\" + num + \". \" + elements;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return _list_;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static String findTask(String input) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        String _list_ \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        int listLength \u003d task_info.size();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        assert listLength \u003e 0;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        for (int i\u003d1; i \u003c\u003d listLength; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Task tmp \u003d task_info.get(i-1);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String string_obj \u003d tmp.toString();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            boolean isContain \u003d string_obj.contains(input);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            if (isContain) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                _list_ +\u003d \"\\n\\t\" + num + \". \" + tmp;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                num++;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return _list_;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static String getOutput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        int num \u003d 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        String _list_ \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        for (Task elements : task_info) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            _list_ +\u003d elements + \"\\n\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            num++;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return _list_;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static Task markDone(int taskNo) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Task task_tmp \u003d task_info.get(taskNo-1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        task_tmp.setDone(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return task_info.get(taskNo-1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void removeTask(int taskNo) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Task tmp \u003d task_info.get(taskNo-1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\tNoted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\t\" + tmp);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        task_info.remove(taskNo-1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        word_count--;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\tNow you have \" + word_count + \" tasks in the list.\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Ui.showLine();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 97
    }
  },
  {
    "path": "src/main/java/subclass/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    private static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        taskList \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public Task deleteTask(int task_no) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return this.taskList.remove(task_no);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 29
    }
  },
  {
    "path": "src/main/java/subclass/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public Todo(String description) throws todoException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 12
    }
  },
  {
    "path": "src/main/java/subclass/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * todo command, add tasks as todo (no date)"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * takes in user\u0027s input after \"todo\" as todo task description."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Display error if no input is detected after \"todo\" command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static final String INPUT \u003d \"todo\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    //private Todo todo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public TodoCommand(boolean isExit, String input) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        super(isExit, input);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void execute(TaskList taskList, Ui ui) throws IOException, todoException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            String input_items \u003d Parser.parseTask(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            if (input_items.equals(\"todo\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                throw new todoException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayGotIt();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            System.out.println(\"\\t\\t\" + Task.add_task(new Todo(input_items)));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            System.out.println(\"\\t\\tNow you have \" + Task.word_count + \" tasks in list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        } catch (todoException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.displayTodoError();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            Ui.showLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 36
    }
  },
  {
    "path": "src/main/java/subclass/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " * Ui class contains most of Duke\u0027s println results"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void showWelcome () {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        String logo \u003d \"\\t ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                + \"\\t|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                + \"\\t| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                + \"\\t| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "                + \"\\t|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t_________________________________________\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tHello! I\u0027m Duke\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tWhat can I do for you?\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t_________________________________________\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    private boolean isInputting(String input) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return input.trim().isEmpty();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        String line;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        line \u003d in.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        while (isInputting(line)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "            line \u003d in.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        return line;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void displayError() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void markAsDone() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tNice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void displayGotIt() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tGot it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void displayError_noItem() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\t☹ OOPS!!! There is no item.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void displayError_dateFormat() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tMake sure to enter date in format: dd-MMM-yy hh:mm PM/AM\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void displayTodoError() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\t☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void displayDeadlineEventError() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t☹ OOPS!!! The description of a deadline/event cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void showLine() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t________________________________________________________________\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void showError(String error_message) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t☹ OOPS!!! \" + error_message);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public static void goodBye() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        System.out.println(\"\\t\\tBye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 79
    }
  },
  {
    "path": "src/main/java/subclass/todoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package subclass;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class todoException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    //no code"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 5
    }
  },
  {
    "path": "src/main/java/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "D|1|do accounts|19-Jul-19 06:30 PM"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "E|0|meeting|Suntec 8pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "T|1|swimming"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "E|1|boxing match|Gym"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "D|1|do math|23-Sep-19 08:00 PM"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "E|1|Joker Movie|Cathay 7pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "D|1|sample work|22-Oct-19 08:30 PM"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "D|0|school work|25-Dec-19 10:30 AM"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "E|0|work out|Gym"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 9
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import subclass.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void testTodo() throws todoException {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Todo todo \u003d new Todo(\"abc\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        assertEquals(\"[T][\\u2718] abc\", todo.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        todo.setDone(true);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        assertEquals(\"[T][\\u2713] abc\", todo.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void testDeadline() throws ParseException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"task abc\", \"31-Dec-19 07:30 PM\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        assertEquals(\"[D][\\u2718] task abc (by: 31-Dec-19 07:30 PM)\", deadline.toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        deadline.setDone(true);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        assertEquals(\"[D][\\u2713] task abc (by: 31-Dec-19 07:30 PM)\", deadline.toString());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    public void testEvent() throws ParseException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        Event event \u003d new Event (\"task abc\", \"31-Dec-19 07:30 PM\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        assertEquals(\"[E][\\u2718] task abc (at: 31-Dec-19 07:30 PM)\", event.toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        event.setDone(true);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "        assertEquals(\"[E][\\u2713] task abc (at: 31-Dec-19 07:30 PM)\", event.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "marcus-ng-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "marcus-ng-nus": 40
    }
  }
]

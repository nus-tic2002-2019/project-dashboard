[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    archiveVersion \u003d \"0.1.3\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    archiveAppendix \u003d null"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter:5.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "test {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "group \u0027seedu.duke\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "version \u00270.1.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    // Change this to your main class."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 22,
      "-": 19
    }
  },
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "0;E;false;task1;2019-06-08;-1;-1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": "1;T;false;task2;;-1;-1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "2;E;false;task3;2019-06-09;-1;-1"
      }
    ],
    "authorContributionMap": {
      "spencernah": 3
    }
  },
  {
    "path": "data/data_test.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "0;E;false;task1;2019-06-08;-1;-1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": "1;T;false;task2;;3;-1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "2;E;false;task3;2019-06-09;-1;-1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "3;D;false;test;2019-08-05;-1;1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "4;D;false;test;2019-08-05;-1;-1"
      }
    ],
    "authorContributionMap": {
      "spencernah": 5
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 duke.command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "@rem Get duke.command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "@rem Slurp the duke.command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "@rem Setup the duke.command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "spencernah": 4,
      "-": 80
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DateFormat;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Entry point of the Duke application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Initializes the application and starts the interaction with the user."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        new Duke(\"/Users/spencernah/code/duke/data/data_test.txt\").run();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Sets up the required objects, loads up the data from the storage file, and prints the welcome message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param filePath argument is the directory where the data for the existing task list (if any) is stored."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *                 The argument is hardcoded at the moment."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            ui.print(\"No existing To Do List. Generating a new one\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            ui.print(\"Unable to read specific lines in data.txt file\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            ui.print(\"Dates in the data.txt file is incompatible. Duke reads date in \" + DateFormat.STANDARD + \" only\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** Runs the program until termination.  */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        boolean firstRun \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Command c;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                if (firstRun) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    firstRun \u003d false;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    c \u003d Parser.parse(\"reminder\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    ui.showLine();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                ui.print(\"Line not found\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                ui.print(\"Please enter the date in this format: \" + DateFormat.STANDARD);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 77,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Utility;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Adds a task to the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Mainly for Deadline and Event tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param type task type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param desc task description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param date occurence/due date depending on task type."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public AddCommand(String type, String desc, LocalDate date) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Mainly for ToDo tasks."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param type task type."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param desc task description."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public AddCommand(String type, String desc) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.desc\u003d desc;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Executes the duke.command and add a new task to the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws IOException if there are errors appending the date to the storage file."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws IOException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (this.type \u003d\u003d \"todo\") {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            tasks.add(new ToDo(this.desc));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } else if (this.type \u003d\u003d \"event\") {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            tasks.add(new Event(this.desc, this.date));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } else if (this.type \u003d\u003d \"deadline\") {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            tasks.add(new Deadline(this.desc, this.date));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        int index \u003d tasks.size()-1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        storage.append(index + \";\" + Utility.constructInput(task));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui.print(\"New task added: \\n\\t\" + task.getStatusIconAndDesc() + \"\\n\" + (index+1) + \" tasks in your list\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 69
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Represents an executable duke.command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** Represents the status of the application. If True, application will be terminated */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public Command() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return the termination status"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Messages;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Delete a task from the task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param index index of the task in the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Delete a specific task from the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Set the DoAfter and DoBefore of the parent and child task to -1 (if applicable)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if the task list is empty or task index input is out of range."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws IOException if there are errors writing the data to the storage file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(Messages.LIST_EMPTY);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } else if (tasks.size() \u003c\u003d this.index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Please enter a task number between 1 and \" + tasks.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            updateChildAndParent(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            ui.print(\"Yessir! Task removed!!\\n\\t\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    + tasks.get(this.index).getStatusIconAndDesc() + \"\\n\" + (tasks.size() - 1) + \" tasks to go!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            tasks.remove(this.index);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private void updateChildAndParent(TaskList tasks) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Task currentTask \u003d tasks.get(this.index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (!currentTask.isDoBeforeEmpty()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Task parentTask \u003d tasks.get(currentTask.getDoBefore());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            parentTask.setDoAfter(-1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (!currentTask.isDoAfterEmpty()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Task childTask \u003d tasks.get(currentTask.getDoAfter());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            childTask.setDoBefore(-1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 61
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Utility;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Messages;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Sets a task to completed/done status."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param index index of the task in the task list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Sets a specific task to completed/done and remind users that they can start on the next task that (if applicable)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if there are no task in the list, task index input is out of range, task is already"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * in completed status or the parent task is not done."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws IOException if there are errors updating the specific line of data in the storage file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(Messages.LIST_EMPTY);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } else if (tasks.size() \u003c\u003d index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Please enter a task number between 1 and \" + tasks.size());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } else if (tasks.get(index).getIsDone()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Task is already done!\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Task currentTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            currentTask.markAsDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            String input \u003d \"One task off the list!\\n\\t\" + currentTask.getStatusIconAndDesc() + \"\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            if (!currentTask.isDoBeforeEmpty() \u0026\u0026 !tasks.get(currentTask.getDoBefore()).getIsDone()) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                throw new DukeException(\"You need to complete the parent task before completing this task!\\n\\t\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                        \"Parent task: \" + tasks.get(currentTask.getDoBefore()).getStatusIconAndDesc());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            if (!currentTask.isDoAfterEmpty()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                Task childTask \u003d tasks.get(currentTask.getDoAfter());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                input +\u003d \"\\nYou can now start on the next task!\\n\\t\" + childTask.getStatusIconAndDesc() + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            storage.updateLine(index, index + \";\" + Utility.constructInput(tasks.get(index)));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            ui.print(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 59
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Terminates the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Executes the duke.command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui.showEnd();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 25
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Display list of tasks based on user input task description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param input user input task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.keyword \u003d input;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Executes the duke.command and tasks with description equals to the user input task description."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if task list is empty or there are no tasks with date equals to the user input date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d  getListByDesc(tasks);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(Messages.LIST_EMPTY);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        input \u003d Messages.LIST_HEADER + input;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui.print(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private String getListByDesc (TaskList tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            if (tasks.get(i).getDesc().matches(\".*\" + this.keyword + \".*\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                input +\u003d \"\\t\" + (i+1) + \". \"+ tasks.get(i).getStatusIconAndDesc() + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 48
    }
  },
  {
    "path": "src/main/java/duke/command/SetDoAfterCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Utility;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Allow the users to set Do After tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class SetDoAfterCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected int parentIndex;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected int childIndex;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param parentIndex index of the parent task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param childIndex index of the child task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public SetDoAfterCommand(int parentIndex, int childIndex) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.parentIndex \u003d parentIndex;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.childIndex \u003d childIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Sets a task as the Do After task of another task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if the parent\u0027s due date is before the child\u0027s due date."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws IOException if there are errors updating the specific line of data in the storage file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException, IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (this.parentIndex \u003e\u003d tasks.size() || this.childIndex \u003e\u003d tasks.size() ||"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                this.parentIndex \u003c 0 || this.childIndex \u003c 0) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Tasks number is out of range. Please select a number between 1 -\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    (tasks.size()+1) + \".\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (this.parentIndex \u003d\u003d this.childIndex) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Please choose 2 different tasks\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Task parentTask \u003d tasks.get(this.parentIndex);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Task childTask \u003d tasks.get(this.childIndex);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if ((childTask.getType() !\u003d \"T\" \u0026\u0026 parentTask.getType() !\u003d \"T\") \u0026\u0026"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                isChildDueBeforeParent(parentTask, childTask)) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"The parent task should not be due before the child task\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (!parentTask.isDoAfterEmpty()) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            input \u003d \"Overwritten existing Do After task\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            input \u003d \"New Do After task for \" + parentTask.getDesc();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        input +\u003d \"\\n\\t[\" + parentTask.getDesc() + \"] -\u003e [\" + childTask.getDesc() + \"]\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        parentTask.setDoAfter(this.childIndex);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        childTask.setDoBefore(this.parentIndex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        storage.updateLine(parentIndex, parentIndex + \";\" + Utility.constructInput(tasks.get(parentIndex)));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        storage.updateLine(childIndex, childIndex + \";\" + Utility.constructInput(tasks.get(childIndex)));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui.print(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private boolean isChildDueBeforeParent(Task parentTask, Task childTask) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return childTask.getDate().isBefore(parentTask.getDate());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 71
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * When user input/duke.command is not taken into account in the Parser."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public UnknownCommand() {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Executes the duke.command and prints a response."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui.showUnknown();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ViewAllCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Messages;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Display the list of tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class ViewAllCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public ViewAllCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Executes the duke.command and display all tasks in the task list."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if task list is empty"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(Messages.LIST_EMPTY);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d Messages.LIST_HEADER;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        input +\u003d getAll(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui.print(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private String getAll(TaskList tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            input +\u003d \"\\t\" + (i + 1) + \". \" + tasks.get(i).getStatusIconAndDesc() + \"\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 41
    }
  },
  {
    "path": "src/main/java/duke/command/ViewByDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Display list of task based on a user input date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class ViewByDateCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param date user input date"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public ViewByDateCommand(LocalDate date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Executes the duke.command and tasks with date equals to the user input date."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if task list is empty or there are no tasks with date equals to the user input date."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d  getListByDate(tasks, this.date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(Messages.LIST_EMPTY);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        input \u003d Messages.LIST_HEADER + input;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui.print(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private String getListByDate(TaskList tasks, LocalDate date) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            if (tasks.get(i).getType() \u003d\u003d \"T\") {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            if (tasks.get(i).getDate().equals(date)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                input +\u003d \"\\t\" + (i+1) + \". \"+ tasks.get(i).getStatusIconAndDesc() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 53
    }
  },
  {
    "path": "src/main/java/duke/command/ViewByStatusCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Display list of pending tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class ViewByStatusCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public ViewByStatusCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Executes the duke.command and display a list of tasks that are still not completed/done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if task list is empty or there are no tasks with status (isDone) equals to false."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d getPending(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (tasks.isEmpty() || input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(Messages.LIST_EMPTY);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        input \u003d Messages.LIST_HEADER + input;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui.print(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private String getPending(TaskList tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            if (!tasks.get(i).getIsDone()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                input +\u003d \"\\t\" + (i+1) + \". \"+ tasks.get(i).getStatusIconAndDesc() + \"\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 42
    }
  },
  {
    "path": "src/main/java/duke/command/ViewByUpcomingCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Messages;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.Period;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Display list of upcoming tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class ViewByUpcomingCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public ViewByUpcomingCommand() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Executes the duke.command and display a list of deadlines and events that are due today, tomorrow and overdue."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param ui text ui."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param storage storage file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if there are no tasks in the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d getUpcoming(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(Messages.LIST_EMPTY);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        ui.print(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private String getUpcoming(TaskList tasks) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        LocalDate today \u003d LocalDate.now();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String dueToday \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String dueTmr \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String overdue \u003d \"\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            if (task.getType() \u003d\u003d \"T\" || task.getIsDone()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            int dateDiff \u003d Period.between(today, task.getDate()).getDays();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            if (dateDiff \u003d\u003d 0) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                dueToday +\u003d \"\\t\" + (i+1) + \". \"+ task.getStatusIconAndDesc() + \"\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            } else if (dateDiff \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                dueTmr +\u003d \"\\t\" + (i+1) + \". \"+ task.getStatusIconAndDesc() + \"\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            } else if (dateDiff \u003c 0 \u0026\u0026 task.getType() \u003d\u003d \"D\") {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                overdue +\u003d \"\\t\" + (i+1) + \". \"+ task.getStatusIconAndDesc() + \"\\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (dueToday.length() \u003e 0) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            input +\u003d \"Today\u0027s deadline and events:\\n\" + dueToday;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (dueTmr.length() \u003e 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            input +\u003d \"\\nTomorrow\u0027s deadline and events:\\n\" + dueTmr;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (overdue.length() \u003e 0) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            input +\u003d \"\\nOverdue deadlines:\\n\" + overdue;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            input \u003d \"YAY!! Nothing too urgent at the moment!\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 70
    }
  },
  {
    "path": "src/main/java/duke/others/DateFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.others;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Represents the different date format used in Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class DateFormat {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        public static final String EVENT_AND_DEADLINE \u003d \"dd MMM yyyy\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        public static final String STANDARD \u003d \"yyyy-mm-dd\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 9
    }
  },
  {
    "path": "src/main/java/duke/others/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.others;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Duke-specific exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public DukeException(String err) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 10
    }
  },
  {
    "path": "src/main/java/duke/others/Keyword.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.others;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class Keyword {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String ADD_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String ADD_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String ADD_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String VIEW_BY_DATE \u003d \"list date\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String EXIT_1 \u003d \"bb\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String EXIT_2 \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String VIEW_BY_STATUS_1 \u003d \"pending\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String VIEW_BY_STATUS_2 \u003d \"list pending\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String VIEW_ALL \u003d \"list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String REMINDER \u003d \"reminder\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String DO_AFTER_1 \u003d \"doafter\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String DO_AFTER_2 \u003d \"do after\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 19
    }
  },
  {
    "path": "src/main/java/duke/others/Messages.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.others;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Common messages used by methods in different classes."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class Messages {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String LIST_HEADER \u003d \"Yessir! Here is the list!\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String LIST_EMPTY \u003d \"No tasks in the requested list!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 9
    }
  },
  {
    "path": "src/main/java/duke/others/Utility.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.others;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Other helpful methods used in other classes."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class Utility {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Checks if the string contains only numeric characters."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param s input string."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return true if all characters are numeric."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static boolean isNumber(String s) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        for (int i \u003d 0; i \u003c s.length(); i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            if (Character.isDigit(s.charAt(i)) \u003d\u003d false)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Concatenate the task attributes into a single string. Attributes are delimited by \";\"."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param task task object"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return a concatenated string of the task attributes"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static String constructInput(Task task) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String taskType \u003d task.getType();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String input \u003d \"\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (taskType \u003d\u003d \"D\") {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            input \u003d taskType + \";\" + task.getIsDone() + \";\" + task.getDesc() + \";\" + ((Deadline) task).getDate() +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    \";\" + task.getDoAfter() + \";\" + task.getDoBefore();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } else if (taskType \u003d\u003d \"E\") {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            input \u003d taskType + \";\" + task.getIsDone() + \";\" + task.getDesc() + \";\" + ((Event) task).getDate() +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    \";\" + task.getDoAfter() + \";\" + task.getDoBefore();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            input \u003d taskType + \";\" + task.getIsDone() + \";\" + task.getDesc() + \";\" + \";\" + task.getDoAfter() +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    \";\" + task.getDoBefore();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 46
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Utility;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Keyword;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_EXIT_1 \u003d Keyword.EXIT_1;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_EXIT_2 \u003d Keyword.EXIT_2;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_DONE \u003d Keyword.DONE;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_DELETE \u003d Keyword.DELETE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_TODO \u003d Keyword.ADD_TODO;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_DEADLINE \u003d Keyword.ADD_DEADLINE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_EVENT \u003d Keyword.ADD_EVENT;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_LIST_DATE \u003d Keyword.VIEW_BY_DATE;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_LIST \u003d Keyword.VIEW_ALL;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_PENDING_1 \u003d Keyword.VIEW_BY_STATUS_1;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_PENDING_2 \u003d Keyword.VIEW_BY_STATUS_2;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_FIND \u003d Keyword.FIND;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_REMINDER \u003d Keyword.REMINDER;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_DO_AFTER_1 \u003d Keyword.DO_AFTER_1;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String KEYWORD_DO_AFTER_2 \u003d Keyword.DO_AFTER_2;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static final String ERR_NOT_A_INT \u003d \"Please enter an integer\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Parses user input."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public Parser() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Parses user input into duke.command for execution."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param input full user input string."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return the duke.command based on the user input."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static Command parse(String input) throws DukeException, DateTimeParseException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        checkForDelimiter(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String keyword \u003d getKeyword(input.trim());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String parameter \u003d \"\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String desc \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String date \u003d \"\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case (KEYWORD_EXIT_1):"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case (KEYWORD_EXIT_2):"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case (KEYWORD_LIST):"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                return new ViewAllCommand();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_PENDING_1):"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_PENDING_2):"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                return new ViewByStatusCommand();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_LIST_DATE):"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                date \u003d getCleanDateStr(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                return new ViewByDateCommand(LocalDate.parse(date));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_FIND):"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                parameter \u003d removeKeyword(input, KEYWORD_FIND).trim();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                if (parameter.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    throw new DukeException(\"Please enter a parameter after \\\"find\\\"\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                return new FindCommand(parameter);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_REMINDER):"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                return new ViewByUpcomingCommand();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_DONE):"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                parameter \u003d removeKeyword(input, KEYWORD_DONE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                if (Utility.isNumber(parameter)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    return new DoneCommand( Integer.parseInt(parameter) - 1);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    throw new DukeException(ERR_NOT_A_INT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_DELETE):"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                parameter \u003d removeKeyword(input, KEYWORD_DELETE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                if (Utility.isNumber(parameter)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    return new DeleteCommand( Integer.parseInt(parameter) - 1);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    throw new DukeException(ERR_NOT_A_INT);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_DEADLINE):"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_EVENT):"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                parameter \u003d removeKeyword(input, keyword);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                checkDesc(parameter);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                date \u003d getCleanDateStr(input);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                LocalDate dateLocal \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                desc \u003d parameter.substring(0, parameter.lastIndexOf(\"/\")).trim();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                return new AddCommand(keyword, desc, dateLocal);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_TODO):"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                desc \u003d removeKeyword(input, keyword);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                checkDesc(desc);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                return new AddCommand(keyword, desc);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_DO_AFTER_1):"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            case(KEYWORD_DO_AFTER_2):"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                parameter \u003d removeKeyword(input, keyword).trim();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                String taskIndex1 \u003d parameter.substring(0,1);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                if (!Utility.isNumber(taskIndex1)) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    throw new DukeException(ERR_NOT_A_INT);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                checkTaskIndex(parameter);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                String taskIndex2 \u003d parameter.substring(parameter.lastIndexOf(\"/\") + 1).trim();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                if (!Utility.isNumber(taskIndex2)) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    throw new DukeException(ERR_NOT_A_INT);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                return new SetDoAfterCommand(Integer.parseInt(taskIndex1)-1,"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                        Integer.parseInt(taskIndex2)-1);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return new UnknownCommand();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Get keyword of the duke.command based on the user input."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param input full user input string."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return keyword of the duke.command."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private static String getKeyword(String input) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (input.matches(KEYWORD_DONE + \".*\")) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return KEYWORD_DONE;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        else if (input.matches(KEYWORD_DELETE + \".*\")) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return KEYWORD_DELETE;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        else if (input.matches(KEYWORD_DEADLINE + \".*\")) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return KEYWORD_DEADLINE;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        else if (input.matches(KEYWORD_EVENT + \".*\")) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return KEYWORD_EVENT;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        else if (input.matches(KEYWORD_TODO + \".*\")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return KEYWORD_TODO;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        else if (input.matches(KEYWORD_LIST_DATE + \".*\")) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return KEYWORD_LIST_DATE;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        else if (input.matches(KEYWORD_FIND + \".*\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return KEYWORD_FIND;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        else if (input.matches(KEYWORD_DO_AFTER_1 + \".*\")){"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return KEYWORD_DO_AFTER_1;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        else if (input.matches(KEYWORD_DO_AFTER_2 + \".*\")){"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return KEYWORD_DO_AFTER_2;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Remove keyword to get the duke.command parameters (if applicable)."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param input full user input string."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param keyword duke.command keyword."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return duke.command parameters."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private static String removeKeyword(String input, String keyword) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return input.replace(keyword, \"\").trim();"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Checks if user has input a task description when entering a create task duke.command."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param param duke.command parameter."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if task description is missing from the user input."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private static void checkDesc(String param) throws DukeException {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (param.length() \u003d\u003d 0 || param.charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Task description cannot be empty!!\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Checks if user has input a date when entering a create Event/Deadline duke.command."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param param duke.command parameter."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if user did not lead the date with a \"/\" character, did not enter a date or enter an"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * invalid date format (accepted format \u003d \"yyyy-mm-dd\" or \"yyyy-m-d\")."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private static void checkDate(String param) throws DukeException {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        int delimiterIndex \u003d param.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (delimiterIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Please enter a date and lead it with \\\"/\\\"\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String date \u003d param.substring(delimiterIndex + 1);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (date.length() \u003d\u003d 0)  {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Please include a date after the \\\"/\\\" :)\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (date.lastIndexOf(\"-\") \u003c 0) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Duke reads date in \" + DateFormat.STANDARD +"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                    \". Please separate your dates with \\\"-\\\" (eg. 2019-08-15)\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private static void checkTaskIndex(String param) throws DukeException {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        int delimiterIndex \u003d param.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (delimiterIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Please enter a task number and lead it with \\\"/\\\"\\n(eg. doafter 3 /2)\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String date \u003d param.substring(delimiterIndex + 1);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (date.length() \u003d\u003d 0)  {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Please include a task number after the \\\"/\\\" :)\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Condenses all the methods that needs to be performed to ensure that the date input is correct and return the"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * correct date format (if applicable)."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param input full user input string.."
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return date string in the correct format (yyyy-mm-dd)."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException from checkDate() method."
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private static String getCleanDateStr(String input) throws DukeException {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        checkDate(input);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        input \u003d input.substring(input.lastIndexOf(\"/\") + 1).trim();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        input \u003d changeDateFormat(input);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Change the date parameter into a format that can be parsed to LocalDate."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param date date parameter."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return a date string in \"yyyy-mm-dd\" format."
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private static String changeDateFormat (String date) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String day \u003d date.substring(date.lastIndexOf(\"-\")+1);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (day.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            day \u003d \"0\" + day;"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String month \u003d date.substring(date.indexOf(\"-\")+1, date.lastIndexOf(\"-\"));"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (month.length() \u003d\u003d 1) {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            month \u003d \"0\" + month;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String year \u003d date.substring(0,4);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return year + \"-\" + month + \"-\" + day;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Ensure that the users do not input any delimiter character"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param input full user input string."
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DukeException if there the delimiter character is used in input"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private static void checkForDelimiter(String input) throws DukeException {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (input.matches(\".*;.*\")) {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            throw new DukeException(\"Please refrain from using the character \\\";\\\"\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 254
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Utility;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.nio.charset.StandardCharsets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Represents the file and its corresponding methods used to store task list data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected String path;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected String data;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected boolean isEmpty;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * The file used to store task list data."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param filePath is the directory of the data.txt file."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.path \u003d filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.data \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.isEmpty \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Loads the data from this storage and returns it"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return the data in String."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws FileNotFoundException if the path is not valid"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public String load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        File f \u003d new File(this.path);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Scanner s \u003d new Scanner(f);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            this.data \u003d this.data + s.nextLine() + System.lineSeparator();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (this.data.length() \u003e 0) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            this.isEmpty \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.data;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Saves Task List data to storage file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param tasks is the Task List to be saved."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws IOException if there are errors writing the data to the storage file."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void save(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        FileWriter writer \u003d new FileWriter(new File(this.path));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            String input \u003d index + \";\" + Utility.constructInput(tasks.get(i));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            writer.write(input + System.lineSeparator());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Appends data to the storage file. Used mainly when new tasks are created."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param textToAppend is the task data in String"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws IOException if there are errors writing the file"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void append(String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.path, true);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        fw.write(textToAppend + System.lineSeparator());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Updates a specific line of data (a.k.a task data). Used mainly when changes are made to existing tasks."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param n is the index of the record."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param input is the new data."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws IOException if there are errors writing the file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void updateLine(int n, String input) throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Path path \u003d Paths.get(this.path);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String content \u003d new String(Files.readAllBytes(path));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String line \u003d readLine(n);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        content \u003d content.replaceAll(line, input);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Files.write(path, content.getBytes(StandardCharsets.UTF_8));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Read a specific line of data/task data in the storage."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param n is the index of the record."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return a specific line of data/task data."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws IOException if the line of data is not found."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    private String readLine(int n) throws IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return Files.readAllLines(Paths.get(this.path)).get(n);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 109
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * A type of task where task is tied to a due date"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** Represents the due date of the task */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public Deadline(String desc, LocalDate date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        super(desc, \"D\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** @return the date of the event. Format \u003d \"yyyy-mm-dd\" */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** @return the date of the event. Format \u003d \"dd mm yyyy\" */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public String getFormattedDate() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(DateFormat.EVENT_AND_DEADLINE));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** @return the task type, task status (as a icon), task description and task date (in \"dd mm yyyy\" format). */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public String getStatusIconAndDesc() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc + \" (by: \" + getFormattedDate() + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 34
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * A type of task where task is tied to a occurrence date"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** Represents the occurrence date of the event*/"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public Event(String desc, LocalDate date) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        super(desc, \"E\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** @return the date of the event. Format \u003d \"yyyy-mm-dd\" */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** @return the date of the event. Format \u003d \"dd mm yyyy\" */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public String getFormattedDate() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(DateFormat.EVENT_AND_DEADLINE));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** @return the task type, task status (as a icon), task description and task date (in \"dd mm yyyy\" format). */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public String getStatusIconAndDesc() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc + \" (at: \" + getFormattedDate() + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 35
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/** Represents a generic task. */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** Represents the status of the task. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected int doAfter \u003d -1;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected int doBefore \u003d-1;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param desc is the description of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param type is the type of the task (deadline, event or todo)."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public Task(String desc, String type) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Sets the task status based on the param."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param status used to overwrite the task status."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void setStatus(boolean status) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Sets the doAfter task based on the param."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param index task index."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void setDoAfter(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.doAfter \u003d index;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Sets the doBefore task based on the param."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param index task index."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void setDoBefore(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.doBefore \u003d index;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Returns the task status (isDone) in the form of an icon."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return a tick or cross icon."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return \"\\u2713\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            return \"\\u2718\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** @return task description. */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.desc;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Returns the task status."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return true if task is completed."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** @return the task type, task status (as a icon) and task description. */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public String getStatusIconAndDesc() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return \"[\" + this.type + \"][\" + this.getStatusIcon() + \"] \" + this.desc;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** @return the task type (deadline, event or todo. */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Used mainly for subclasses like event and deadline."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return null by default."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return doAfter task index."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public int getDoAfter() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.doAfter;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return doBefore task index."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public int getDoBefore() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.doBefore;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /** Change the task status to complete. */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return true if there is no Do After task."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public boolean isDoAfterEmpty() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.doAfter \u003d\u003d -1;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return true if there is no Do Before task."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public boolean isDoBeforeEmpty() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return this.doBefore \u003d\u003d -1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 130
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.StringReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Represents the list used to store the various tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected static ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Create a task list using existing data."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param input is a String of task data."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws IOException if there are errors writing the file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @throws DateTimeParseException if the date format incorrect."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public TaskList(String input) throws IOException, DateTimeParseException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.taskList \u003d new ArrayList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        BufferedReader reader \u003d new BufferedReader(new StringReader(input));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String line \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            String[] delimited \u003d line.split(\";\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            if (\"T\".equals(delimited[1])) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                taskList.add(new ToDo(delimited[3]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            } else if (\"E\".equals(delimited[1])) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                taskList.add(new Event(delimited[3], LocalDate.parse(delimited[4])));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            } else if (\"D\".equals(delimited[1])) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "                taskList.add(new Deadline(delimited[3], LocalDate.parse(delimited[4])));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            taskList.get(taskList.size() - 1).setStatus(Boolean.parseBoolean(delimited[2]));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            taskList.get(taskList.size() - 1).setDoAfter(Integer.parseInt(delimited[5]));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            taskList.get(taskList.size() - 1).setDoBefore(Integer.parseInt(delimited[6]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Create a task list when there are no existing data."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        this.taskList \u003d new ArrayList();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Check if task list is empty."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return true if task list is empty"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return taskList.isEmpty();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Get a specific task from the task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param i is the element index of the task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return the task as a Task object."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return taskList.get(i);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Return the index of a task in the task list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param task task object."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return task index."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public int getIndex(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return taskList.indexOf(task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return the size of the task list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Deletes a specific task from the task list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param i is the element index of the task."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void remove(int i) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        taskList.remove(i);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Creates a new task."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param task is Task object to be created."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 102
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/** Default type of task */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        super(desc, \"T\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 8
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": " * Text UI of the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected Scanner in;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected static final String LINE \u003d \"_________________________________________________________________________\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected static final String MSG_END \u003d \"Oyasumi~\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected static final String MSG_GREETING \u003d \"Harrowwwwwww\\nWut iz up?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    protected static final String MSG_UNKNOWN \u003d \"Sorry, I don\u0027t understand this :(\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * A standardised format for all prints in the application."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param input is the string to be printed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public static void print(String input) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        input \u003d input.replace(\"\\n\", \"\\n\\t\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        System.out.println(\"\\t\" + input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *  Prints the welcome message when application is initialised."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        System.out.println(LOGO + \"\\n\" + MSG_GREETING);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        showLine();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Reads and return the user input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @return user input as String"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Prints a single line. Used mainly as separators between commands and results."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Prints a farewell message after application has been terminated by the user."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void showEnd() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        print(MSG_END);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Prints the error message of an exception."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * @param err is the exception"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void showError(String err) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        print(err);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     * Prints a message when duke.command is unknown to the application."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "spencernah"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void showUnknown() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        print(MSG_UNKNOWN);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 81
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 4
    }
  },
  {
    "path": "src/test/java/duke/command/SetDoAfterCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class SetDoAfterCommandTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    String filePath \u003d \"/Users/spencernah/code/duke/data/data_test.txt\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void setup() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void SetDoAfterCommand_execute_valid() throws IOException, DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d new SetDoAfterCommand(1, 3);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Assertions.assertEquals(tasks.get(1).getDoAfter(), 3);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void SetDoAfterCommand_execute_invalidParentChildIndex() throws IOException, DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d new SetDoAfterCommand(3, 2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void SetDoAfterCommand_execute_indexOutOfRange_positive() throws IOException, DukeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d new SetDoAfterCommand(10, 3);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void SetDoAfterCommand_execute_indexOutOfRange_negative() throws IOException, DukeException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d new SetDoAfterCommand(3, -1);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void SetDoAfterCommand_execute_sameParentChildIndex() throws IOException, DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d new SetDoAfterCommand(1, 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 69
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "spencernah"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.others.Keyword;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "spencernah"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "spencernah"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    Storage storage \u003d new Storage(\"/Users/spencernah/code/duke/data/data_test.txt\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    TaskList tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void setup() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void parse_ViewByDateCommand_noDate() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d Parser.parse(Keyword.VIEW_BY_DATE);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void parse_ViewByDateCommand_incorrectDateFormat() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d Parser.parse(Keyword.VIEW_BY_DATE + \"/20190805\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void parse_DoneCommand_incorrectIndex() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d Parser.parse(\"done abc\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void parse_DeleteCommand_incorrectIndex() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d Parser.parse(\"delete abc\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void parse_AddCommand_deadline_noDesc() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d Parser.parse(Keyword.ADD_DEADLINE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void parse_AddCommand_deadline_noDate() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d Parser.parse(Keyword.ADD_DEADLINE + \"test/\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void parse_AddCommand_deadline_incorrectDateFormat() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d Parser.parse(Keyword.ADD_DEADLINE + \"test/20190805\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void parse_AddCommand_todo_noDesc() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertThrows(DukeException.class, () -\u003e {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d Parser.parse(Keyword.ADD_TODO);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        });"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    public void parse_AddCommand_Deadline_dateFormat() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        String test \u003d \"\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            Command c \u003d Parser.parse(Keyword.ADD_DEADLINE + \"test/2019-8-5\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "spencernah"
        },
        "content": "            test \u003d ((Deadline) tasks.get(tasks.size()-1)).getFormattedDate();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "spencernah"
        },
        "content": "        Assertions.assertEquals(test, \"05 Aug 2019\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "spencernah"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "spencernah"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "spencernah"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "spencernah": 103
    }
  }
]
